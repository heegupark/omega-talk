{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main-body.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nconst useStyles = makeStyles(() => createStyles({\n  iconbox: {\n    width: '50px'\n  },\n  icon: {\n    color: 'rgb(203,214,242)',\n    backgroundColor: 'rgb(160,182,233)',\n    borderRadius: '30%',\n    width: '40px',\n    height: '40px'\n  },\n  roomname: {\n    paddingTop: '5px',\n    width: '60%',\n    fontSize: '14px',\n    fontWeight: 600\n  },\n  date: {\n    color: 'rgb(173,173,173)',\n    fontSize: '13px'\n  }\n}));\nexport default function ChatMainBody(props) {\n  const classes = useStyles();\n  const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  const convertDate = dateAt => {\n    const today = new Date();\n    const year = new Date(dateAt).getFullYear();\n    const month = new Date(dateAt).getMonth();\n    const monthName = monthNames[new Date(dateAt).getMonth()];\n    const day = new Date(dateAt).getDay();\n    let date = `${monthName} ${day}`;\n\n    if (today.getFullYear() === year && today.getMonth() === month && today.getDay() === day) {\n      date = new Date(dateAt).toLocaleTimeString(navigator.language, {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n\n    return date;\n  };\n\n  const openChatroom = () => {\n    console.log('open chat room');\n  };\n\n  return __jsx(\"div\", {\n    className: \"chat-main-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, props.rooms.map(room => {\n    const date = convertDate(room.updatedAt);\n    return __jsx(\"div\", {\n      key: room._id,\n      className: \"chat-room-row cursor-pointer\",\n      onClick: () => openChatroom(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: classes.iconbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(PermIdentityIcon, {\n      className: \"profile-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: classes.roomname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, room.roomname), __jsx(\"div\", {\n      className: classes.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, date));\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main-body.tsx"],"names":["React","makeStyles","createStyles","PermIdentityIcon","useStyles","iconbox","width","icon","color","backgroundColor","borderRadius","height","roomname","paddingTop","fontSize","fontWeight","date","ChatMainBody","props","classes","monthNames","convertDate","dateAt","today","Date","year","getFullYear","month","getMonth","monthName","day","getDay","toLocaleTimeString","navigator","language","hour","minute","openChatroom","console","log","rooms","map","room","updatedAt","_id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    iconbox: {\n      width: '50px',\n    },\n    icon: {\n      color: 'rgb(203,214,242)',\n      backgroundColor: 'rgb(160,182,233)',\n      borderRadius: '30%',\n      width: '40px',\n      height: '40px',\n    },\n    roomname: {\n      paddingTop: '5px',\n      width: '60%',\n      fontSize: '14px',\n      fontWeight: 600,\n    },\n    date: {\n      color: 'rgb(173,173,173)',\n      fontSize: '13px',\n    },\n  })\n);\n\nexport default function ChatMainBody(props: any) {\n  const classes = useStyles();\n  const monthNames = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n  const convertDate = (dateAt: any) => {\n    const today = new Date();\n    const year = new Date(dateAt).getFullYear();\n    const month = new Date(dateAt).getMonth();\n    const monthName = monthNames[new Date(dateAt).getMonth()];\n    const day = new Date(dateAt).getDay();\n    let date = `${monthName} ${day}`;\n    if (\n      today.getFullYear() === year &&\n      today.getMonth() === month &&\n      today.getDay() === day\n    ) {\n      date = new Date(dateAt).toLocaleTimeString(navigator.language, {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n    }\n    return date;\n  };\n\n  const openChatroom = () => {\n    console.log('open chat room');\n  };\n\n  return (\n    <div className=\"chat-main-body\">\n      {props.rooms.map((room: any) => {\n        const date = convertDate(room.updatedAt);\n        return (\n          <div\n            key={room._id}\n            className=\"chat-room-row cursor-pointer\"\n            onClick={() => openChatroom()}\n          >\n            <div className={classes.iconbox}>\n              <PermIdentityIcon className=\"profile-icon\" />\n            </div>\n            <div className={classes.roomname}>{room.roomname}</div>\n            <div className={classes.date}>{date}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}