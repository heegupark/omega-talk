{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport ChatMainHead from './chat-main-head';\nexport default function ChatMain() {\n  _s();\n\n  var _useState = useState([]),\n      rooms = _useState[0],\n      setRooms = _useState[1];\n\n  var getRooms = function getRooms() {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(data.rooms);\n      if (data.success) setRooms(data.rooms);\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting room information:\".concat(err.message));\n    });\n  };\n\n  var create = function create(roomname) {\n    fetch('/api/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roomname: roomname\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(data);\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while creating:\".concat(err.message));\n    });\n  };\n\n  var createChatroom = function createChatroom(roomname) {\n    console.log('createChatroom');\n    create(roomname);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ChatMainHead, {\n    createChatroom: createChatroom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ChatMain, \"roAMubDTcAOCXrqtWwLjMbJyA0g=\");\n\n_c = ChatMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMain\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx"],"names":["React","useState","ChatMainHead","ChatMain","rooms","setRooms","getRooms","fetch","method","headers","then","res","json","data","console","log","success","err","error","message","create","roomname","body","JSON","stringify","createChatroom"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACPF,QAAQ,CAAC,EAAD,CADD;AAAA,MAC1BG,KAD0B;AAAA,MACnBC,QADmB;;AAEjC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,KADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFS,KAAf,CAAL,CAMGC,IANH,CAMQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KANR,EAOGF,IAPH,CAOQ,UAACG,IAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACT,KAAjB;AACA,UAAIS,IAAI,CAACG,OAAT,EAAkBX,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACnB,KAVH,WAWS,UAACa,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACI,KAAR,mEAC6DD,GAAG,CAACE,OADjE;AAGD,KAfH;AAgBD,GAjBD;;AAmBA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD,EAAsB;AACnCd,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFU;AAKnBa,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,QAAAA,QAAQ,EAAEA;AAAZ,OAAf;AALa,KAAhB,CAAL,CAOGX,IAPH,CAOQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KAPR,EAQGF,IARH,CAQQ,UAACG,IAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAVH,WAWS,UAACI,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACI,KAAR,mDAAyDD,GAAG,CAACE,OAA7D;AACD,KAbH;AAcD,GAfD;;AAiBA,MAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,QAAD,EAAsB;AAC3CP,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAK,IAAAA,MAAM,CAACC,QAAD,CAAN;AACD,GAHD;;AAKA,SACE,4BACE,MAAC,YAAD;AAAc,IAAA,cAAc,EAAEI,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;GAhDuBtB,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\nimport ChatMainHead from './chat-main-head';\n\nexport default function ChatMain() {\n  const [rooms, setRooms] = useState([]);\n  const getRooms = () => {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.rooms);\n        if (data.success) setRooms(data.rooms);\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting room information:${err.message}`\n        );\n      });\n  };\n\n  const create = (roomname: String) => {\n    fetch('/api/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ roomname: roomname }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => {\n        console.error(`Something wrong happened while creating:${err.message}`);\n      });\n  };\n\n  const createChatroom = (roomname: String) => {\n    console.log('createChatroom');\n    create(roomname);\n  };\n\n  return (\n    <>\n      <ChatMainHead createChatroom={createChatroom} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}