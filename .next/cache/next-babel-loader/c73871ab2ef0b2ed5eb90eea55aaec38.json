{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/room.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\nexport default function Room(props) {\n  var _roommainRef$current2, _roommainRef$current3;\n\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const roommainRef = React.useRef(null);\n\n  const sendMessage = message => {\n    fetch('/api/message', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        console.log(data);\n        setMessages([...messages, data.data]);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while sending a message:${err.message}`);\n    });\n  };\n\n  const getMessages = () => {\n    fetch(`/api/getmessage`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: props.window._id\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        console.log(data);\n        setMessages(data.data);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while getting messages:${err.message}`);\n    });\n  };\n\n  useEffect(() => {\n    getMessages();\n  }, []);\n  useEffect(() => {\n    var _roommainRef$current;\n\n    console.log((_roommainRef$current = roommainRef.current) === null || _roommainRef$current === void 0 ? void 0 : _roommainRef$current.clientHeight);\n  }, [(_roommainRef$current2 = roommainRef.current) === null || _roommainRef$current2 === void 0 ? void 0 : _roommainRef$current2.clientHeight]);\n  return __jsx(\"div\", {\n    className: \"room-main\",\n    ref: roommainRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(RoomChatMain, {\n    roommainHeight: (_roommainRef$current3 = roommainRef.current) === null || _roommainRef$current3 === void 0 ? void 0 : _roommainRef$current3.clientHeight,\n    username: props.username,\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), __jsx(RoomChatInput, {\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/room.tsx"],"names":["React","useState","useEffect","RoomChatMain","RoomChatInput","Room","props","messages","setMessages","roommainRef","useRef","sendMessage","message","fetch","method","headers","body","JSON","stringify","_id","window","roomname","username","then","res","json","data","success","console","log","catch","err","error","getMessages","current","clientHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\n\nexport default function Room(props: any) {\n  const [messages, setMessages] = useState([]);\n  const roommainRef = React.useRef<HTMLDivElement>(null);\n\n  const sendMessage = (message: string) => {\n    fetch('/api/message', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          console.log(data);\n          setMessages([...messages, data.data] as any);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while sending a message:${err.message}`\n        );\n      });\n  };\n  const getMessages = () => {\n    fetch(`/api/getmessage`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        _id: props.window._id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          console.log(data);\n          setMessages(data.data);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  useEffect(() => {\n    getMessages();\n  }, []);\n  useEffect(() => {\n    console.log(roommainRef.current?.clientHeight);\n  }, [roommainRef.current?.clientHeight]);\n  return (\n    <div className=\"room-main\" ref={roommainRef}>\n      <RoomChatMain\n        roommainHeight={roommainRef.current?.clientHeight}\n        username={props.username}\n        messages={messages}\n      />\n      <RoomChatInput sendMessage={sendMessage} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}