{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main-body.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nvar useStyles = makeStyles(function () {\n  return createStyles({\n    head: {\n      margin: '13px',\n      color: 'rgb(66, 54, 48)'\n    },\n    iconbox: {\n      width: '50px'\n    },\n    icon: {\n      color: 'rgb(203,214,242)',\n      backgroundColor: 'rgb(160,182,233)',\n      borderRadius: '30%',\n      width: '40px',\n      height: '40px'\n    },\n    room: {\n      height: '30px',\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    roomname: {\n      paddingTop: '5px',\n      width: '60%'\n    },\n    date: {\n      color: 'rgb(173,173,173)',\n      fontSize: '13px'\n    }\n  });\n});\nexport default function ChatMainBody(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  var convertDate = function convertDate(dateAt) {\n    var today = new Date();\n    var year = new Date(dateAt).getFullYear();\n    var month = new Date(dateAt).getMonth();\n    var monthName = monthNames[new Date(dateAt).getMonth()];\n    var day = new Date(dateAt).getDay();\n    var date = \"\".concat(monthName, \" \").concat(day);\n\n    if (today.getFullYear() === year && today.getMonth() === month && today.getDay() === day) {\n      date = new Date(dateAt).toLocaleTimeString(navigator.language, {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n\n    return date;\n  };\n\n  return __jsx(\"div\", {\n    className: classes.bodyHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, props.rooms.map(function (room) {\n    var date = convertDate(room.updatedAt);\n    return __jsx(\"div\", {\n      key: room._id,\n      className: classes.room,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: classes.iconbox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, __jsx(PermIdentityIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: classes.roomname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, room.roomname), __jsx(\"div\", {\n      className: classes.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, date));\n  }));\n}\n\n_s(ChatMainBody, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChatMainBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMainBody\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main-body.tsx"],"names":["React","makeStyles","createStyles","PermIdentityIcon","useStyles","head","margin","color","iconbox","width","icon","backgroundColor","borderRadius","height","room","display","flexDirection","roomname","paddingTop","date","fontSize","ChatMainBody","props","classes","monthNames","convertDate","dateAt","today","Date","year","getFullYear","month","getMonth","monthName","day","getDay","toLocaleTimeString","navigator","language","hour","minute","bodyHead","rooms","map","updatedAt","_id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,0BAAzC;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC;AAAA,SAC3BC,YAAY,CAAC;AACXG,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,KAAK,EAAE;AAFH,KADK;AAKXC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE;AADA,KALE;AAQXC,IAAAA,IAAI,EAAE;AACJH,MAAAA,KAAK,EAAE,kBADH;AAEJI,MAAAA,eAAe,EAAE,kBAFb;AAGJC,MAAAA,YAAY,EAAE,KAHV;AAIJH,MAAAA,KAAK,EAAE,MAJH;AAKJI,MAAAA,MAAM,EAAE;AALJ,KARK;AAeXC,IAAAA,IAAI,EAAE;AACJD,MAAAA,MAAM,EAAE,MADJ;AAEJJ,MAAAA,KAAK,EAAE,MAFH;AAGJM,MAAAA,OAAO,EAAE,MAHL;AAIJC,MAAAA,aAAa,EAAE;AAJX,KAfK;AAqBXC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAE,KADJ;AAERT,MAAAA,KAAK,EAAE;AAFC,KArBC;AAyBXU,IAAAA,IAAI,EAAE;AACJZ,MAAAA,KAAK,EAAE,kBADH;AAEJa,MAAAA,QAAQ,EAAE;AAFN;AAzBK,GAAD,CADe;AAAA,CAAD,CAA5B;AAiCA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAAkC;AAAA;;AAAA;;AAC/C,MAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,MAAMoB,UAAU,GAAG,CACjB,KADiB,EAEjB,KAFiB,EAGjB,KAHiB,EAIjB,KAJiB,EAKjB,KALiB,EAMjB,KANiB,EAOjB,KAPiB,EAQjB,KARiB,EASjB,KATiB,EAUjB,KAViB,EAWjB,KAXiB,EAYjB,KAZiB,CAAnB;;AAcA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAiB;AACnC,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,IAAI,GAAG,IAAID,IAAJ,CAASF,MAAT,EAAiBI,WAAjB,EAAb;AACA,QAAMC,KAAK,GAAG,IAAIH,IAAJ,CAASF,MAAT,EAAiBM,QAAjB,EAAd;AACA,QAAMC,SAAS,GAAGT,UAAU,CAAC,IAAII,IAAJ,CAASF,MAAT,EAAiBM,QAAjB,EAAD,CAA5B;AACA,QAAME,GAAG,GAAG,IAAIN,IAAJ,CAASF,MAAT,EAAiBS,MAAjB,EAAZ;AACA,QAAIhB,IAAI,aAAMc,SAAN,cAAmBC,GAAnB,CAAR;;AACA,QACEP,KAAK,CAACG,WAAN,OAAwBD,IAAxB,IACAF,KAAK,CAACK,QAAN,OAAqBD,KADrB,IAEAJ,KAAK,CAACQ,MAAN,OAAmBD,GAHrB,EAIE;AACAf,MAAAA,IAAI,GAAG,IAAIS,IAAJ,CAASF,MAAT,EAAiBU,kBAAjB,CAAoCC,SAAS,CAACC,QAA9C,EAAwD;AAC7DC,QAAAA,IAAI,EAAE,SADuD;AAE7DC,QAAAA,MAAM,EAAE;AAFqD,OAAxD,CAAP;AAID;;AACD,WAAOrB,IAAP;AACD,GAlBD;;AAmBA,SACE;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACkB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,KAAK,CAACoB,KAAN,CAAYC,GAAZ,CAAgB,UAAC7B,IAAD,EAAe;AAC9B,QAAMK,IAAI,GAAGM,WAAW,CAACX,IAAI,CAAC8B,SAAN,CAAxB;AACA,WACE;AAAK,MAAA,GAAG,EAAE9B,IAAI,CAAC+B,GAAf;AAAoB,MAAA,SAAS,EAAEtB,OAAO,CAACT,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAES,OAAO,CAACf,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AAAkB,MAAA,SAAS,EAAEe,OAAO,CAACb,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAEa,OAAO,CAACN,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCH,IAAI,CAACG,QAAxC,CAJF,EAKE;AAAK,MAAA,SAAS,EAAEM,OAAO,CAACJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BA,IAA/B,CALF,CADF;AASD,GAXA,CADH,CADF;AAgBD;;GAnDuBE,Y;UACNjB,S;;;KADMiB,Y","sourcesContent":["import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    head: {\n      margin: '13px',\n      color: 'rgb(66, 54, 48)',\n    },\n    iconbox: {\n      width: '50px',\n    },\n    icon: {\n      color: 'rgb(203,214,242)',\n      backgroundColor: 'rgb(160,182,233)',\n      borderRadius: '30%',\n      width: '40px',\n      height: '40px',\n    },\n    room: {\n      height: '30px',\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    roomname: {\n      paddingTop: '5px',\n      width: '60%',\n    },\n    date: {\n      color: 'rgb(173,173,173)',\n      fontSize: '13px',\n    },\n  })\n);\n\nexport default function ChatMainBody(props: any) {\n  const classes = useStyles();\n  const monthNames = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n  const convertDate = (dateAt: any) => {\n    const today = new Date();\n    const year = new Date(dateAt).getFullYear();\n    const month = new Date(dateAt).getMonth();\n    const monthName = monthNames[new Date(dateAt).getMonth()];\n    const day = new Date(dateAt).getDay();\n    let date = `${monthName} ${day}`;\n    if (\n      today.getFullYear() === year &&\n      today.getMonth() === month &&\n      today.getDay() === day\n    ) {\n      date = new Date(dateAt).toLocaleTimeString(navigator.language, {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n    }\n    return date;\n  };\n  return (\n    <div className={classes.bodyHead}>\n      {props.rooms.map((room: any) => {\n        const date = convertDate(room.updatedAt);\n        return (\n          <div key={room._id} className={classes.room}>\n            <div className={classes.iconbox}>\n              <PermIdentityIcon className={classes.icon} />\n            </div>\n            <div className={classes.roomname}>{room.roomname}</div>\n            <div className={classes.date}>{date}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}