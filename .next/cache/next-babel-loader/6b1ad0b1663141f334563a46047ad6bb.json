{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport IndexPage from '../components/index-page';\nimport Main from '../components/main';\n\nvar _default = /*#__PURE__*/function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isAcceptDisclaimer: localStorage.getItem('omegarideaccept')\n    };\n    _this.setIsAcceptDisclaimer = _this.setIsAcceptDisclaimer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"setIsAcceptDisclaimer\",\n    value: function setIsAcceptDisclaimer() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(IndexPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }), __jsx(Main, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }), !isAcceptDisclaimer && __jsx(Disclaimer, {\n        setIsAcceptDisclaimer: setIsAcceptDisclaimer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/pages/index.tsx"],"names":["React","Component","IndexPage","Main","props","state","isAcceptDisclaimer","localStorage","getItem","setIsAcceptDisclaimer","bind"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;;;;AAGE,oBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAEC,YAAY,CAACC,OAAb,CAAqB,iBAArB;AADT,KAAb;AAGA,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BC,IAA3B,+BAA7B;AALsB;AAMvB;;;;4CAEuB,CAAE;;;6BACjB;AACP,aACE,4BACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,CAACJ,kBAAD,IACC,MAAC,UAAD;AAAY,QAAA,qBAAqB,EAAEG,qBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADF;AASD;;;;EApB0BR,S","sourcesContent":["import React, { Component } from 'react';\nimport IndexPage from '../components/index-page';\nimport Main from '../components/main';\n\nexport default class extends Component {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isAcceptDisclaimer: localStorage.getItem('omegarideaccept'),\n    };\n    this.setIsAcceptDisclaimer = this.setIsAcceptDisclaimer.bind(this);\n  }\n\n  setIsAcceptDisclaimer() {}\n  render() {\n    return (\n      <>\n        <IndexPage />\n        <Main />\n        {!isAcceptDisclaimer && (\n          <Disclaimer setIsAcceptDisclaimer={setIsAcceptDisclaimer} />\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}