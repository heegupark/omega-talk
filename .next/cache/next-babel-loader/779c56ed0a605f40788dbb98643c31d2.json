{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/room.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\nimport socketIOClient from 'socket.io-client';\nvar socket = socketIOClient(':8081/');\nexport default function Room(props) {\n  _s();\n\n  var _roommainRef$current;\n\n  var _useState = useState([]),\n      messages = _useState[0],\n      setMessages = _useState[1];\n\n  var roommainRef = React.useRef(null);\n\n  var sendMessage = function sendMessage(message) {\n    if (socket) {\n      socket.emit('chat', {\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message: message\n      });\n    }\n  };\n\n  var getMessages = function getMessages() {\n    fetch(\"/api/getmessage\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: props.window._id\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        console.log(data);\n        setMessages(data.data);\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting messages:\".concat(err.message));\n    });\n  };\n\n  useEffect(function () {\n    getMessages();\n  }, []);\n  useEffect(function () {\n    var room = props.window._id;\n    socket.on(\"room-\".concat(room), function (data) {\n      console.log(data);\n\n      if (data.data) {\n        setMessages(function (messages) {\n          return [].concat(_toConsumableArray(messages), [data.data]);\n        });\n      }\n    });\n    return function () {};\n  }, [props.window._id]);\n  return __jsx(\"div\", {\n    className: \"room-main\",\n    ref: roommainRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(RoomChatMain, {\n    roommainHeight: (_roommainRef$current = roommainRef.current) === null || _roommainRef$current === void 0 ? void 0 : _roommainRef$current.clientHeight,\n    username: props.username,\n    roomId: props.window._id,\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), __jsx(RoomChatInput, {\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Room, \"yeJA1bbyNgtbZSmo3fwOL0RplIk=\");\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/room.tsx"],"names":["React","useState","useEffect","RoomChatMain","RoomChatInput","socketIOClient","socket","Room","props","messages","setMessages","roommainRef","useRef","sendMessage","message","emit","_id","window","roomname","username","getMessages","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","console","log","err","error","room","on","current","clientHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(':8081/');\n\nexport default function Room(props: any) {\n  const [messages, setMessages] = useState([]);\n  const roommainRef = React.useRef<HTMLDivElement>(null);\n\n  const sendMessage = (message: string) => {\n    if (socket) {\n      socket.emit('chat', {\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message,\n      });\n    }\n  };\n  const getMessages = () => {\n    fetch(`/api/getmessage`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        _id: props.window._id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          console.log(data);\n          setMessages(data.data);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  useEffect(() => {\n    getMessages();\n  }, []);\n\n  useEffect(() => {\n    const room = props.window._id;\n    socket.on(`room-${room}`, (data: any) => {\n      console.log(data);\n      if (data.data) {\n        setMessages((messages: any) => [...messages, data.data] as any);\n      }\n    });\n    return () => {};\n  }, [props.window._id]);\n\n  return (\n    <div className=\"room-main\" ref={roommainRef}>\n      <RoomChatMain\n        roommainHeight={roommainRef.current?.clientHeight}\n        username={props.username}\n        roomId={props.window._id}\n        messages={messages}\n      />\n      <RoomChatInput sendMessage={sendMessage} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}