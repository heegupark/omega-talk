{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Window from '../components/window';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(`:${process.env.socketPort}/`);\nexport default function Main(props) {\n  const {\n    0: maxZIndex,\n    1: setMaxZIndex\n  } = useState(0);\n  const {\n    0: windows,\n    1: setWindows\n  } = useState([]);\n  const {\n    0: lastPosition,\n    1: setLastPosition\n  } = useState({\n    x: 200,\n    y: 50\n  });\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: view,\n    1: setView\n  } = useState('username');\n  useEffect(() => {\n    if (localStorage.getItem('omega-talk-username')) {\n      setUsername(localStorage.getItem('omega-talk-username'));\n      setView('main');\n    }\n  }, []);\n\n  const openWindow = (_id, room) => {\n    setView('chat-room');\n    const isOpened = windows.findIndex(window => window._id === _id);\n    const newWindow = {\n      _id,\n      roomname: room.roomname,\n      positionX: lastPosition.x + 20,\n      positionY: lastPosition.y + 20,\n      zIndex: maxZIndex + 100,\n      owner: room.owner,\n      participants: room.participants.length\n    };\n\n    if (isOpened === -1) {\n      setWindows(windows => [...windows, newWindow]);\n      setLastPosition({\n        x: newWindow.positionX,\n        y: newWindow.positionY\n      });\n\n      if (socket) {\n        socket.emit('joinroom', {\n          _id,\n          username\n        });\n      }\n    } else {\n      const newWindows = windows.map(window => {\n        if (window._id === _id) {\n          window.zIndex = maxZIndex + 1;\n        }\n\n        return window;\n      });\n      setWindows(() => newWindows);\n    }\n  };\n\n  const closeWindow = _id => {\n    const newWindows = windows.filter(item => item._id !== _id);\n    setWindows(newWindows);\n    setView('main');\n  };\n\n  const signout = () => {\n    localStorage.removeItem('omega-talk-username');\n    setView('username');\n    setUsername('');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Window, {\n    view: view,\n    setView: setView,\n    category: view,\n    maxZIndex: maxZIndex,\n    username: username,\n    setUsername: setUsername,\n    lastPosition: lastPosition,\n    setLastPosition: setLastPosition,\n    setMaxZIndex: setMaxZIndex,\n    openWindow: openWindow,\n    signout: signout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), windows.map(window => {\n    return __jsx(Window, {\n      key: window._id,\n      window: window,\n      username: username,\n      zIndex: window.zIndex,\n      setLastPosition: setLastPosition,\n      maxZIndex: maxZIndex,\n      category: \"chat-room\",\n      closeWindow: closeWindow,\n      setMaxZIndex: setMaxZIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main.tsx"],"names":["React","useState","useEffect","Window","socketIOClient","socket","process","env","socketPort","Main","props","maxZIndex","setMaxZIndex","windows","setWindows","lastPosition","setLastPosition","x","y","username","setUsername","view","setView","localStorage","getItem","openWindow","_id","room","isOpened","findIndex","window","newWindow","roomname","positionX","positionY","zIndex","owner","participants","length","emit","newWindows","map","closeWindow","filter","item","signout","removeItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Window from '../components/window';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(`:${process.env.socketPort}/`);\n\nexport default function Main(props: any) {\n  const [maxZIndex, setMaxZIndex] = useState(0);\n  const [windows, setWindows] = useState([] as any);\n  const [lastPosition, setLastPosition] = useState({ x: 200, y: 50 });\n  const [username, setUsername] = useState('' as any);\n  const [view, setView] = useState('username');\n\n  useEffect(() => {\n    if (localStorage.getItem('omega-talk-username')) {\n      setUsername(localStorage.getItem('omega-talk-username'));\n      setView('main');\n    }\n  }, []);\n  const openWindow = (_id: string, room: any) => {\n    setView('chat-room');\n    const isOpened = windows.findIndex((window: any) => window._id === _id);\n    const newWindow = {\n      _id,\n      roomname: room.roomname,\n      positionX: lastPosition.x + 20,\n      positionY: lastPosition.y + 20,\n      zIndex: maxZIndex + 100,\n      owner: room.owner,\n      participants: room.participants.length,\n    };\n    if (isOpened === -1) {\n      setWindows((windows: any) => [...windows, newWindow] as any);\n      setLastPosition({ x: newWindow.positionX, y: newWindow.positionY });\n      if (socket) {\n        socket.emit('joinroom', {\n          _id,\n          username,\n        });\n      }\n    } else {\n      const newWindows = windows.map((window: any) => {\n        if (window._id === _id) {\n          window.zIndex = maxZIndex + 1;\n        }\n        return window;\n      });\n      setWindows(() => newWindows);\n    }\n  };\n\n  const closeWindow = (_id: any) => {\n    const newWindows = windows.filter((item: any) => item._id !== _id);\n    setWindows(newWindows as any);\n    setView('main');\n  };\n\n  const signout = () => {\n    localStorage.removeItem('omega-talk-username');\n    setView('username');\n    setUsername('');\n  };\n\n  return (\n    <>\n      <Window\n        view={view}\n        setView={setView}\n        category={view}\n        maxZIndex={maxZIndex}\n        username={username}\n        setUsername={setUsername}\n        lastPosition={lastPosition}\n        setLastPosition={setLastPosition}\n        setMaxZIndex={setMaxZIndex}\n        openWindow={openWindow}\n        signout={signout}\n      />\n      {windows.map((window: any) => {\n        return (\n          <Window\n            key={window._id}\n            window={window}\n            username={username}\n            zIndex={window.zIndex}\n            setLastPosition={setLastPosition}\n            maxZIndex={maxZIndex}\n            category=\"chat-room\"\n            closeWindow={closeWindow}\n            setMaxZIndex={setMaxZIndex}\n          />\n        );\n      })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}