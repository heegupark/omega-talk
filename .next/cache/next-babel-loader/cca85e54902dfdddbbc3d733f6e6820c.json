{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/window-mobile.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Rnd } from 'react-rnd';\nimport Left from '../components/left';\nimport Top from '../components/top';\nimport ChatMain from '../components/chat-main';\nimport Room from '../components/room';\nimport EnterUsername from '../components/enter-username';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nexport default function WindowMobile(props) {\n  const {\n    0: position,\n    1: setPosition\n  } = useState(props.window ? {\n    x: props.window.positionX,\n    y: props.window.positionY\n  } : {\n    x: 200,\n    y: 50\n  });\n  const {\n    0: tempPosition,\n    1: setTempPosition\n  } = useState({\n    x: 0,\n    y: 0\n  });\n  const {\n    0: size,\n    1: setSize\n  } = useState({\n    width: 400,\n    height: 640\n  });\n  const {\n    0: tempSize,\n    1: setTempSize\n  } = useState({\n    width: 400,\n    height: 640\n  }); // const [zIndex, setZIndex] = useState(props.window ? props.window.zIndex : 0);\n\n  const {\n    0: zIndex,\n    1: setZIndex\n  } = useState(0);\n  const {\n    0: marginLeft,\n    1: setMarginLeft\n  } = useState(0);\n  const {\n    0: isCloseMainWindow,\n    1: setIsCloseMainWindow\n  } = useState(false);\n  let {\n    0: isExpanded,\n    1: setIsExpanded\n  } = useState(false);\n  let {\n    0: isMinimized,\n    1: setIsMinimized\n  } = useState(false);\n  let {\n    0: isDraggable,\n    1: setIsDraggable\n  } = useState(true);\n  useEffect(() => {\n    setZIndex(props.zIndex);\n  }, [props.zIndex]);\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'bottom',\n    horizontal: 'left'\n  });\n  const {\n    open,\n    vertical,\n    horizontal\n  } = state;\n\n  const closeMinimize = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  };\n\n  const expand = () => {\n    setTempPosition({\n      x: position.x,\n      y: position.y\n    });\n    setPosition({\n      x: 0,\n      y: 0\n    });\n    if (!isMinimized) setTempSize({\n      width: size.width,\n      height: size.height\n    });\n    setSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n    setIsDraggable(false);\n    setIsExpanded(true);\n  };\n\n  const shrink = () => {\n    setPosition({\n      x: tempPosition.x,\n      y: tempPosition.y\n    });\n    setSize({\n      width: tempSize.width,\n      height: tempSize.height\n    });\n    setIsDraggable(true);\n    setIsExpanded(false);\n  };\n\n  const handleExpand = () => {\n    if (isMinimized) {\n      setIsMinimized(false);\n      closeMinimize();\n      expand();\n    } else {\n      if (isExpanded) {\n        shrink();\n      } else {\n        expand();\n      }\n    }\n  };\n\n  const handleMinimize = () => {\n    const numOfMinimized = document.querySelectorAll('#minimized').length;\n    setMarginLeft(numOfMinimized * 100);\n\n    if (isMinimized) {\n      setPosition({\n        x: position.x,\n        y: position.y\n      });\n      closeMinimize();\n    } else {\n      setState({\n        open: true,\n        vertical: 'bottom',\n        horizontal: 'left'\n      });\n    }\n\n    setIsMinimized(!isMinimized);\n  };\n\n  const handleCloseWindow = () => {\n    if (props.window) {\n      props.closeWindow(props.window._id);\n    } else {\n      setIsCloseMainWindow(true);\n      setIsMinimized(false);\n      setState({\n        open: true,\n        vertical: 'top',\n        horizontal: 'left'\n      });\n    }\n  };\n\n  const openMainWindow = () => {\n    setIsMinimized(false);\n    setIsCloseMainWindow(false);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  };\n\n  let element = null;\n\n  switch (props.category) {\n    case 'username':\n      element = __jsx(\"div\", {\n        className: \"username-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, __jsx(EnterUsername, {\n        handleExpand: handleExpand,\n        handleMinimize: handleMinimize,\n        handleCloseWindow: handleCloseWindow,\n        setUsername: props.setUsername,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }));\n      break;\n\n    case 'main':\n      element = __jsx(\"div\", {\n        className: \"main-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, __jsx(Left, {\n        username: props.username,\n        signout: props.signout,\n        handleCloseWindow: handleCloseWindow,\n        handleMinimize: handleMinimize,\n        handleExpand: handleExpand,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }), __jsx(ChatMain, {\n        openWindow: props.openWindow,\n        username: props.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }));\n      break;\n\n    case 'chat-room':\n      element = __jsx(\"div\", {\n        className: \"room-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, __jsx(Top, {\n        handleCloseWindow: handleCloseWindow,\n        window: props.window,\n        handleMinimize: handleMinimize,\n        handleExpand: handleExpand,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }), __jsx(Room, {\n        username: props.username,\n        window: props.window,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }));\n      break;\n  }\n\n  return __jsx(React.Fragment, null, !isMinimized && !isCloseMainWindow && __jsx(Rnd, {\n    default: {\n      x: 0,\n      y: 0,\n      width: size.width,\n      height: size.height\n    },\n    position: {\n      x: 0,\n      y: 0\n    },\n    size: {\n      width: size.width,\n      height: size.height\n    },\n    minWidth: 320,\n    minHeight: 640,\n    onDragStop: (e, d) => {\n      setPosition({\n        x: d.x,\n        y: d.y\n      });\n      props.setLastPosition({\n        x: d.x,\n        y: d.y\n      });\n    },\n    onDragStart: () => {\n      setZIndex(props.maxZIndex + 1);\n      props.setMaxZIndex(() => props.maxZIndex + 1);\n    },\n    onResizeStop: (e, direction, ref, delta, position) => {\n      setSize({\n        width: Number(ref.style.width.split('px')[0]),\n        height: Number(ref.style.height.split('px')[0])\n      });\n    },\n    disableDragging: !isDraggable,\n    style: {\n      zIndex\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, element), __jsx(Snackbar, {\n    id: \"minimized\",\n    style: vertical === 'top' ? {\n      marginLeft: 0\n    } : {\n      marginLeft\n    },\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    open: open,\n    key: vertical + horizontal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, __jsx(React.Fragment, null, isCloseMainWindow ? __jsx(Tooltip, {\n    title: \"open main window\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    onClick: () => openMainWindow(),\n    className: \"closed-box bg-brown cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, __jsx(\"i\", {\n    className: \"far fa-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }))) : __jsx(\"span\", {\n    className: \"minimized-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, __jsx(Left, {\n    styleCategory: \"minimized\",\n    category: props.category,\n    handleCloseWindow: handleCloseWindow,\n    window: props.window,\n    handleMinimize: handleMinimize,\n    handleExpand: handleExpand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/window-mobile.tsx"],"names":["React","useState","useEffect","Rnd","Left","Top","ChatMain","Room","EnterUsername","Snackbar","Tooltip","WindowMobile","props","position","setPosition","window","x","positionX","y","positionY","tempPosition","setTempPosition","size","setSize","width","height","tempSize","setTempSize","zIndex","setZIndex","marginLeft","setMarginLeft","isCloseMainWindow","setIsCloseMainWindow","isExpanded","setIsExpanded","isMinimized","setIsMinimized","isDraggable","setIsDraggable","state","setState","open","vertical","horizontal","closeMinimize","expand","innerWidth","innerHeight","shrink","handleExpand","handleMinimize","numOfMinimized","document","querySelectorAll","length","handleCloseWindow","closeWindow","_id","openMainWindow","element","category","setUsername","username","signout","openWindow","e","d","setLastPosition","maxZIndex","setMaxZIndex","direction","ref","delta","Number","style","split"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Rnd } from 'react-rnd';\nimport Left from '../components/left';\nimport Top from '../components/top';\nimport ChatMain from '../components/chat-main';\nimport Room from '../components/room';\nimport EnterUsername from '../components/enter-username';\nimport Snackbar, { SnackbarOrigin } from '@material-ui/core/Snackbar';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport interface State extends SnackbarOrigin {\n  open: boolean;\n}\n\nexport default function WindowMobile(props: any) {\n  const [position, setPosition] = useState(\n    props.window\n      ? {\n          x: props.window.positionX,\n          y: props.window.positionY,\n        }\n      : {\n          x: 200,\n          y: 50,\n        }\n  );\n  const [tempPosition, setTempPosition] = useState({ x: 0, y: 0 });\n  const [size, setSize] = useState({ width: 400, height: 640 });\n  const [tempSize, setTempSize] = useState({ width: 400, height: 640 });\n  // const [zIndex, setZIndex] = useState(props.window ? props.window.zIndex : 0);\n  const [zIndex, setZIndex] = useState(0);\n  const [marginLeft, setMarginLeft] = useState(0);\n  const [isCloseMainWindow, setIsCloseMainWindow] = useState(false);\n  let [isExpanded, setIsExpanded] = useState(false);\n  let [isMinimized, setIsMinimized] = useState(false);\n  let [isDraggable, setIsDraggable] = useState(true);\n\n  useEffect(() => {\n    setZIndex(props.zIndex);\n  }, [props.zIndex]);\n\n  const [state, setState] = React.useState<State>({\n    open: false,\n    vertical: 'bottom',\n    horizontal: 'left',\n  });\n  const { open, vertical, horizontal } = state;\n\n  const closeMinimize = () => {\n    setState({ ...state, open: false });\n  };\n\n  const expand = () => {\n    setTempPosition({ x: position.x, y: position.y });\n    setPosition({ x: 0, y: 0 });\n    if (!isMinimized) setTempSize({ width: size.width, height: size.height });\n    setSize({ width: window.innerWidth, height: window.innerHeight });\n    setIsDraggable(false);\n    setIsExpanded(true);\n  };\n\n  const shrink = () => {\n    setPosition({ x: tempPosition.x, y: tempPosition.y });\n    setSize({ width: tempSize.width, height: tempSize.height });\n    setIsDraggable(true);\n    setIsExpanded(false);\n  };\n\n  const handleExpand = () => {\n    if (isMinimized) {\n      setIsMinimized(false);\n      closeMinimize();\n      expand();\n    } else {\n      if (isExpanded) {\n        shrink();\n      } else {\n        expand();\n      }\n    }\n  };\n\n  const handleMinimize = () => {\n    const numOfMinimized = document.querySelectorAll('#minimized').length;\n    setMarginLeft(numOfMinimized * 100);\n    if (isMinimized) {\n      setPosition({ x: position.x, y: position.y });\n      closeMinimize();\n    } else {\n      setState({ open: true, vertical: 'bottom', horizontal: 'left' });\n    }\n    setIsMinimized(!isMinimized);\n  };\n\n  const handleCloseWindow = () => {\n    if (props.window) {\n      props.closeWindow(props.window._id);\n    } else {\n      setIsCloseMainWindow(true);\n      setIsMinimized(false);\n      setState({ open: true, vertical: 'top', horizontal: 'left' });\n    }\n  };\n\n  const openMainWindow = () => {\n    setIsMinimized(false);\n    setIsCloseMainWindow(false);\n    setState({ ...state, open: false });\n  };\n\n  let element = null;\n  switch (props.category) {\n    case 'username':\n      element = (\n        <div className=\"username-box\">\n          <EnterUsername\n            handleExpand={handleExpand}\n            handleMinimize={handleMinimize}\n            handleCloseWindow={handleCloseWindow}\n            setUsername={props.setUsername}\n          />\n        </div>\n      );\n      break;\n    case 'main':\n      element = (\n        <div className=\"main-box\">\n          <Left\n            username={props.username}\n            signout={props.signout}\n            handleCloseWindow={handleCloseWindow}\n            handleMinimize={handleMinimize}\n            handleExpand={handleExpand}\n          />\n          <ChatMain openWindow={props.openWindow} username={props.username} />\n        </div>\n      );\n      break;\n    case 'chat-room':\n      element = (\n        <div className=\"room-box\">\n          <Top\n            handleCloseWindow={handleCloseWindow}\n            window={props.window}\n            handleMinimize={handleMinimize}\n            handleExpand={handleExpand}\n          />\n          <Room username={props.username} window={props.window} />\n        </div>\n      );\n      break;\n  }\n\n  return (\n    <>\n      {!isMinimized && !isCloseMainWindow && (\n        <Rnd\n          default={{\n            x: 0,\n            y: 0,\n            width: size.width,\n            height: size.height,\n          }}\n          position={{\n            x: 0,\n            y: 0,\n          }}\n          size={{\n            width: size.width,\n            height: size.height,\n          }}\n          minWidth={320}\n          minHeight={640}\n          onDragStop={(e, d) => {\n            setPosition({ x: d.x, y: d.y });\n            props.setLastPosition({ x: d.x, y: d.y });\n          }}\n          onDragStart={() => {\n            setZIndex(props.maxZIndex + 1);\n            props.setMaxZIndex(() => props.maxZIndex + 1);\n          }}\n          onResizeStop={(e, direction, ref, delta, position) => {\n            setSize({\n              width: Number(ref.style.width.split('px')[0]),\n              height: Number(ref.style.height.split('px')[0]),\n            });\n          }}\n          disableDragging={!isDraggable}\n          style={{ zIndex }}\n        >\n          {element}\n        </Rnd>\n      )}\n      <Snackbar\n        id=\"minimized\"\n        style={vertical === 'top' ? { marginLeft: 0 } : { marginLeft }}\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        key={vertical + horizontal}\n      >\n        <>\n          {isCloseMainWindow ? (\n            <Tooltip title=\"open main window\" arrow>\n              <span\n                onClick={() => openMainWindow()}\n                className=\"closed-box bg-brown cursor-pointer\"\n              >\n                <i className=\"far fa-comment\"></i>\n              </span>\n            </Tooltip>\n          ) : (\n            <span className=\"minimized-box\">\n              <Left\n                styleCategory=\"minimized\"\n                category={props.category}\n                handleCloseWindow={handleCloseWindow}\n                window={props.window}\n                handleMinimize={handleMinimize}\n                handleExpand={handleExpand}\n              />\n            </span>\n          )}\n        </>\n      </Snackbar>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}