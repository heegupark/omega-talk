{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\nimport socketIOClient from 'socket.io-client';\nvar socket = socketIOClient(':8081/');\nexport var disconnectSocket = function disconnectSocket() {\n  if (socket) socket.disconnect();\n};\nexport default function ChatMain(props) {\n  var _useState = useState([]),\n      rooms = _useState[0],\n      setRooms = _useState[1];\n\n  var getRooms = function getRooms() {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) setRooms(data.rooms);\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting room information:\".concat(err.message));\n    });\n  };\n\n  useEffect(getRooms, []);\n  useEffect(function () {\n    socket.on('main', function (data) {\n      console.log(data);\n      var newRooms = [data.data].concat(_toConsumableArray(rooms));\n\n      if (data.success) {\n        setRooms(newRooms);\n        props.openWindow(data.data._id, data.data);\n      }\n    });\n    return function () {\n      disconnectSocket();\n    };\n  }, []);\n\n  var create = function create(roomname) {\n    var roomData = {\n      roomname: roomname,\n      username: props.username\n    };\n\n    if (socket) {\n      socket.emit('create-room', roomData);\n    } // fetch('/api/create', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({ roomname: roomname, username: props.username }),\n    // })\n    //   .then((res) => res.json())\n    //   .then((data) => {\n    //     const newRooms = [data.room, ...rooms] as any;\n    //     if (data.success) {\n    //       setRooms(newRooms);\n    //       props.openWindow(data.room._id, data.room);\n    //     }\n    //   })\n    //   .catch((err) => {\n    //     console.error(`Something wrong happened while creating:${err.message}`);\n    //   });\n\n  };\n\n  var createChatroom = function createChatroom(roomname) {\n    create(roomname);\n  };\n\n  return __jsx(\"div\", {\n    className: \"main-chat\"\n  }, __jsx(ChatMainHead, {\n    createChatroom: createChatroom\n  }), __jsx(ChatMainBody, {\n    rooms: rooms,\n    openWindow: props.openWindow\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}