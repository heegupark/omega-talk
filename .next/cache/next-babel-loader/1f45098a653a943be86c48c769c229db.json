{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main-body.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport default function ChatMainBody(props) {\n  const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  const convertDate = dateAt => {\n    const today = new Date();\n    const thisDate = new Date(dateAt);\n    const year = thisDate.split(' ')[3];\n    const month = new Date(dateAt).split(' ')[1];\n    const monthName = monthNames[new Date(dateAt)];\n    const day = new Date(dateAt).split(' ')[2];\n    let date = `${monthName} ${day}`;\n    console.log(new Date(dateAt));\n\n    if (today.getFullYear() === year && today.getMonth() === month && today.getDay() === day) {\n      date = new Date(dateAt).toLocaleTimeString(navigator.language, {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n\n    return date;\n  };\n\n  const openChatroom = (_id, room) => {\n    props.openWindow(_id, room);\n  };\n\n  const covertRoomname = name => {\n    return name.length > 12 ? name.substring(0, 11) + '...' : name;\n  };\n\n  return __jsx(\"div\", {\n    className: \"chat-main-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, props.rooms.map(room => {\n    const date = convertDate(room.updatedAt);\n    return __jsx(\"div\", {\n      key: room._id,\n      className: \"chat-room-row cursor-pointer\",\n      onClick: () => openChatroom(room._id, room),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"icon-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(\"i\", {\n      className: \"far fa-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"room-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, covertRoomname(room.roomname)), __jsx(\"div\", {\n      className: \"room-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, date));\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main-body.tsx"],"names":["React","ChatMainBody","props","monthNames","convertDate","dateAt","today","Date","thisDate","year","split","month","monthName","day","date","console","log","getFullYear","getMonth","getDay","toLocaleTimeString","navigator","language","hour","minute","openChatroom","_id","room","openWindow","covertRoomname","name","length","substring","rooms","map","updatedAt","roomname"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default function ChatMainBody(props: any) {\n  const monthNames = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n  const convertDate = (dateAt: any) => {\n    const today = new Date();\n    const thisDate = new Date(dateAt);\n    const year = thisDate.split(' ')[3];\n    const month = new Date(dateAt).split(' ')[1];\n    const monthName = monthNames[new Date(dateAt)];\n    const day = new Date(dateAt).split(' ')[2];\n    let date = `${monthName} ${day}`;\n    console.log(new Date(dateAt));\n    if (\n      today.getFullYear() === year &&\n      today.getMonth() === month &&\n      today.getDay() === day\n    ) {\n      date = new Date(dateAt).toLocaleTimeString(navigator.language, {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n    }\n    return date;\n  };\n\n  const openChatroom = (_id: any, room: any) => {\n    props.openWindow(_id, room);\n  };\n\n  const covertRoomname = (name: any) => {\n    return name.length > 12 ? name.substring(0, 11) + '...' : name;\n  };\n\n  return (\n    <div className=\"chat-main-body\">\n      {props.rooms.map((room: any) => {\n        const date = convertDate(room.updatedAt);\n        return (\n          <div\n            key={room._id}\n            className=\"chat-room-row cursor-pointer\"\n            onClick={() => openChatroom(room._id, room)}\n          >\n            <div className=\"icon-box\">\n              <i className=\"far fa-user\"></i>\n            </div>\n            <div className=\"room-name\">{covertRoomname(room.roomname)}</div>\n            <div className=\"room-date\">{date}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}