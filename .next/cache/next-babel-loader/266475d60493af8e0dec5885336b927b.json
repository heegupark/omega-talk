{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(':8081/');\nexport default function Room(props) {\n  var _roommainRef$current;\n\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const roommainRef = React.useRef(null);\n\n  const sendMessage = message => {\n    fetch('/api/message', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setMessages([...messages, data.data]);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while sending a message:${err.message}`);\n    });\n  };\n\n  const getMessages = () => {\n    fetch(`/api/getmessage`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: props.window._id\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        console.log(data);\n        setMessages(data.data);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while getting messages:${err.message}`);\n    });\n  };\n\n  useEffect(() => {\n    getMessages();\n    socket.on(`room-${props.window._id}`, data => {\n      console.log('via socket', data.data);\n      setMessages([...messages, data.data]);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: \"room-main\",\n    ref: roommainRef\n  }, __jsx(RoomChatMain, {\n    roommainHeight: (_roommainRef$current = roommainRef.current) === null || _roommainRef$current === void 0 ? void 0 : _roommainRef$current.clientHeight,\n    username: props.username,\n    messages: messages\n  }), __jsx(RoomChatInput, {\n    sendMessage: sendMessage\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}