{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\nexport default function ChatMain() {\n  _s();\n\n  var _useState = useState([]),\n      rooms = _useState[0],\n      setRooms = _useState[1];\n\n  var getRooms = function getRooms() {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) setRooms(data.rooms);\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting room information:\".concat(err.message));\n    });\n  };\n\n  useEffect(getRooms, []);\n\n  var create = function create(roomname) {\n    fetch('/api/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roomname: roomname\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var newRooms = [data.room.roomname].concat(_toConsumableArray(rooms));\n      if (data.success) setRooms(newRooms);\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while creating:\".concat(err.message));\n    });\n  };\n\n  var createChatroom = function createChatroom(roomname) {\n    console.log('createChatroom');\n    create(roomname);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ChatMainHead, {\n    createChatroom: createChatroom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), __jsx(ChatMainBody, {\n    rooms: rooms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(ChatMain, \"pVIe8tJm1V/hStRMkuwTtBQhqgo=\");\n\n_c = ChatMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMain\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx"],"names":["React","useState","useEffect","ChatMainHead","ChatMainBody","ChatMain","rooms","setRooms","getRooms","fetch","method","headers","then","res","json","data","success","err","console","error","message","create","roomname","body","JSON","stringify","newRooms","room","createChatroom","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACPJ,QAAQ,CAAC,EAAD,CADD;AAAA,MAC1BK,KAD0B;AAAA,MACnBC,QADmB;;AAEjC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,KADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFS,KAAf,CAAL,CAMGC,IANH,CAMQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KANR,EAOGF,IAPH,CAOQ,UAACG,IAAD,EAAU;AACd,UAAIA,IAAI,CAACC,OAAT,EAAkBT,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACnB,KATH,WAUS,UAACW,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,mEAC6DF,GAAG,CAACG,OADjE;AAGD,KAdH;AAeD,GAhBD;;AAkBAlB,EAAAA,SAAS,CAACM,QAAD,EAAW,EAAX,CAAT;;AAEA,MAAMa,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD,EAAsB;AACnCb,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFU;AAKnBY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,QAAAA,QAAQ,EAAEA;AAAZ,OAAf;AALa,KAAhB,CAAL,CAOGV,IAPH,CAOQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KAPR,EAQGF,IARH,CAQQ,UAACG,IAAD,EAAU;AACd,UAAMW,QAAQ,IAAIX,IAAI,CAACY,IAAL,CAAUL,QAAd,4BAA2BhB,KAA3B,EAAd;AACA,UAAIS,IAAI,CAACC,OAAT,EAAkBT,QAAQ,CAACmB,QAAD,CAAR;AACnB,KAXH,WAYS,UAACT,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,mDAAyDF,GAAG,CAACG,OAA7D;AACD,KAdH;AAeD,GAhBD;;AAkBA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACN,QAAD,EAAsB;AAC3CJ,IAAAA,OAAO,CAACW,GAAR,CAAY,gBAAZ;AACAR,IAAAA,MAAM,CAACC,QAAD,CAAN;AACD,GAHD;;AAKA,SACE,4BACE,MAAC,YAAD;AAAc,IAAA,cAAc,EAAEM,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEtB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;GAnDuBD,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\n\nexport default function ChatMain() {\n  const [rooms, setRooms] = useState([]);\n  const getRooms = () => {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.success) setRooms(data.rooms);\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting room information:${err.message}`\n        );\n      });\n  };\n\n  useEffect(getRooms, []);\n\n  const create = (roomname: String) => {\n    fetch('/api/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ roomname: roomname }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const newRooms = [data.room.roomname, ...rooms];\n        if (data.success) setRooms(newRooms);\n      })\n      .catch((err) => {\n        console.error(`Something wrong happened while creating:${err.message}`);\n      });\n  };\n\n  const createChatroom = (roomname: String) => {\n    console.log('createChatroom');\n    create(roomname);\n  };\n\n  return (\n    <>\n      <ChatMainHead createChatroom={createChatroom} />\n      <ChatMainBody rooms={rooms} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}