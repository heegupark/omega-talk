{"ast":null,"code":"import Room from '../../middleware/models/room';\n\nrequire('../../middleware/db/mongoose');\n\nexport default (async (request, response) => {\n  const {\n    roomname,\n    username\n  } = request.body;\n\n  try {\n    const newRoom = new Room({\n      roomname,\n      username,\n      participants: {\n        username\n      }\n    });\n    await newRoom.save();\n    return response.status(201).json({\n      success: true,\n      room: newRoom\n    });\n  } catch (e) {\n    return response.status(500).json({\n      success: false,\n      message: 'failed to create a room'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/pages/api/create.tsx"],"names":["Room","require","request","response","roomname","username","body","newRoom","participants","save","status","json","success","room","e","message"],"mappings":"AACA,OAAOA,IAAP,MAAiB,8BAAjB;;AACAC,OAAO,CAAC,8BAAD,CAAP;;AAEA,gBAAe,OAAOC,OAAP,EAAgCC,QAAhC,KAA8D;AAC3E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,OAAO,CAACI,IAAvC;;AACA,MAAI;AACF,UAAMC,OAAO,GAAG,IAAIP,IAAJ,CAAS;AACvBI,MAAAA,QADuB;AAEvBC,MAAAA,QAFuB;AAGvBG,MAAAA,YAAY,EAAE;AAAEH,QAAAA;AAAF;AAHS,KAAT,CAAhB;AAKA,UAAME,OAAO,CAACE,IAAR,EAAN;AACA,WAAON,QAAQ,CAACO,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,IAAI,EAAEN;AAAvB,KAA1B,CAAP;AACD,GARD,CAQE,OAAOO,CAAP,EAAU;AACV,WAAOX,QAAQ,CACZO,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBG,MAAAA,OAAO,EAAE;AAA3B,KAFD,CAAP;AAGD;AACF,CAfD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport Room from '../../middleware/models/room';\nrequire('../../middleware/db/mongoose');\n\nexport default async (request: NextApiRequest, response: NextApiResponse) => {\n  const { roomname, username } = request.body;\n  try {\n    const newRoom = new Room({\n      roomname,\n      username,\n      participants: { username },\n    });\n    await newRoom.save();\n    return response.status(201).json({ success: true, room: newRoom });\n  } catch (e) {\n    return response\n      .status(500)\n      .json({ success: false, message: 'failed to create a room' });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}