{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(`:${process.env.socketPort}/`);\nexport default function ChatMain(props) {\n  const {\n    0: rooms,\n    1: setRooms\n  } = useState([]);\n\n  const getRooms = () => {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.success) setRooms(data.rooms);\n    }).catch(err => {\n      console.error(`Something wrong happened while getting room information:${err.message}`);\n    });\n  };\n\n  useEffect(() => {\n    getRooms;\n  }, []);\n  useEffect(() => {\n    socket.on('main', data => {\n      if (data.success) {\n        setRooms(rooms => [data.data, ...rooms]);\n\n        if (props.username === data.data.owner) {\n          props.openWindow(data.data._id, data.data);\n        }\n      }\n    });\n    return () => {};\n  }, []);\n\n  const create = roomname => {\n    const roomData = {\n      roomname: roomname,\n      username: props.username\n    };\n\n    if (socket) {\n      socket.emit('create-room', roomData);\n    }\n  };\n\n  const createChatroom = roomname => {\n    create(roomname);\n  };\n\n  return __jsx(\"div\", {\n    className: props.isMobile ? 'main-chat-mobile' : 'main-chat',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(ChatMainHead, {\n    createChatroom: createChatroom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), __jsx(ChatMainBody, {\n    rooms: rooms,\n    openWindow: props.openWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx"],"names":["React","useState","useEffect","ChatMainHead","ChatMainBody","socketIOClient","socket","process","env","socketPort","ChatMain","props","rooms","setRooms","getRooms","fetch","method","headers","then","res","json","data","success","catch","err","console","error","message","on","username","owner","openWindow","_id","create","roomname","roomData","emit","createChatroom","isMobile"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,MAAM,GAAGD,cAAc,CAAE,IAAGE,OAAO,CAACC,GAAR,CAAYC,UAAW,GAA5B,CAA7B;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;AAC3C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMa,QAAQ,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,KADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFS,KAAf,CAAL,CAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOSG,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,OAAT,EAAkBT,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACnB,KATH,EAUGW,KAVH,CAUUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CACG,2DAA0DF,GAAG,CAACG,OAAQ,EADzE;AAGD,KAdH;AAeD,GAhBD;;AAkBAzB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACsB,EAAP,CAAU,MAAV,EAAmBP,IAAD,IAAe;AAC/B,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBT,QAAAA,QAAQ,CAAED,KAAD,IAAgB,CAACS,IAAI,CAACA,IAAN,EAAY,GAAGT,KAAf,CAAjB,CAAR;;AACA,YAAID,KAAK,CAACkB,QAAN,KAAmBR,IAAI,CAACA,IAAL,CAAUS,KAAjC,EAAwC;AACtCnB,UAAAA,KAAK,CAACoB,UAAN,CAAiBV,IAAI,CAACA,IAAL,CAAUW,GAA3B,EAAgCX,IAAI,CAACA,IAArC;AACD;AACF;AACF,KAPD;AAQA,WAAO,MAAM,CAAE,CAAf;AACD,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMY,MAAM,GAAIC,QAAD,IAAsB;AACnC,UAAMC,QAAQ,GAAG;AAAED,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBL,MAAAA,QAAQ,EAAElB,KAAK,CAACkB;AAAtC,KAAjB;;AACA,QAAIvB,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAAC8B,IAAP,CAAY,aAAZ,EAA2BD,QAA3B;AACD;AACF,GALD;;AAOA,QAAME,cAAc,GAAIH,QAAD,IAAsB;AAC3CD,IAAAA,MAAM,CAACC,QAAD,CAAN;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAEvB,KAAK,CAAC2B,QAAN,GAAiB,kBAAjB,GAAsC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,cAAc,EAAED,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEzB,KAArB;AAA4B,IAAA,UAAU,EAAED,KAAK,CAACoB,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(`:${process.env.socketPort}/`);\n\nexport default function ChatMain(props: any) {\n  const [rooms, setRooms] = useState([]);\n  const getRooms = () => {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.success) setRooms(data.rooms);\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting room information:${err.message}`\n        );\n      });\n  };\n\n  useEffect(() => {\n    getRooms;\n  }, []);\n\n  useEffect(() => {\n    socket.on('main', (data: any) => {\n      if (data.success) {\n        setRooms((rooms: any) => [data.data, ...rooms] as any);\n        if (props.username === data.data.owner) {\n          props.openWindow(data.data._id, data.data);\n        }\n      }\n    });\n    return () => {};\n  }, []);\n\n  const create = (roomname: String) => {\n    const roomData = { roomname: roomname, username: props.username };\n    if (socket) {\n      socket.emit('create-room', roomData);\n    }\n  };\n\n  const createChatroom = (roomname: String) => {\n    create(roomname);\n  };\n\n  return (\n    <div className={props.isMobile ? 'main-chat-mobile' : 'main-chat'}>\n      <ChatMainHead createChatroom={createChatroom} />\n      <ChatMainBody rooms={rooms} openWindow={props.openWindow} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}