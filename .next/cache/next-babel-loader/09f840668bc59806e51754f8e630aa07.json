{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(':8081/');\nexport const disconnectSocket = () => {\n  console.log('Disconnecting socket...');\n  if (socket) socket.disconnect();\n};\nexport default function ChatMain(props) {\n  const {\n    0: rooms,\n    1: setRooms\n  } = useState([]);\n\n  const getRooms = () => {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.success) setRooms(data.rooms);\n    }).catch(err => {\n      console.error(`Something wrong happened while getting room information:${err.message}`);\n    });\n  };\n\n  useEffect(getRooms, []);\n  useEffect(() => {\n    socket.on('main', data => {\n      console.log('Websocket event received!');\n      setMessages(messages => [...messages, data.data]);\n    });\n    return () => {\n      disconnectSocket();\n    };\n  }, [props.window._id]);\n\n  const create = roomname => {\n    fetch('/api/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roomname: roomname,\n        username: props.username\n      })\n    }).then(res => res.json()).then(data => {\n      const newRooms = [data.room, ...rooms];\n\n      if (data.success) {\n        setRooms(newRooms);\n        props.openWindow(data.room._id, data.room);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while creating:${err.message}`);\n    });\n  };\n\n  const createChatroom = roomname => {\n    create(roomname);\n  };\n\n  return __jsx(\"div\", {\n    className: \"main-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(ChatMainHead, {\n    createChatroom: createChatroom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), __jsx(ChatMainBody, {\n    rooms: rooms,\n    openWindow: props.openWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx"],"names":["React","useState","useEffect","ChatMainHead","ChatMainBody","socketIOClient","socket","disconnectSocket","console","log","disconnect","ChatMain","props","rooms","setRooms","getRooms","fetch","method","headers","then","res","json","data","success","catch","err","error","message","on","setMessages","messages","window","_id","create","roomname","body","JSON","stringify","username","newRooms","room","openWindow","createChatroom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,MAAM,GAAGD,cAAc,CAAC,QAAD,CAA7B;AAEA,OAAO,MAAME,gBAAgB,GAAG,MAAM;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,MAAIH,MAAJ,EAAYA,MAAM,CAACI,UAAP;AACb,CAHM;AAKP,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;AAC3C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMc,QAAQ,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,KADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFS,KAAf,CAAL,CAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOSG,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,OAAT,EAAkBT,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACnB,KATH,EAUGW,KAVH,CAUUC,GAAD,IAAS;AACdjB,MAAAA,OAAO,CAACkB,KAAR,CACG,2DAA0DD,GAAG,CAACE,OAAQ,EADzE;AAGD,KAdH;AAeD,GAhBD;;AAkBAzB,EAAAA,SAAS,CAACa,QAAD,EAAW,EAAX,CAAT;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACsB,EAAP,CAAU,MAAV,EAAmBN,IAAD,IAAe;AAC/Bd,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAoB,MAAAA,WAAW,CAAEC,QAAD,IAAmB,CAAC,GAAGA,QAAJ,EAAcR,IAAI,CAACA,IAAnB,CAApB,CAAX;AACD,KAHD;AAIA,WAAO,MAAM;AACXf,MAAAA,gBAAgB;AACjB,KAFD;AAGD,GARQ,EAQN,CAACK,KAAK,CAACmB,MAAN,CAAaC,GAAd,CARM,CAAT;;AAUA,QAAMC,MAAM,GAAIC,QAAD,IAAsB;AACnClB,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFU;AAKnBiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBI,QAAAA,QAAQ,EAAE1B,KAAK,CAAC0B;AAAtC,OAAf;AALa,KAAhB,CAAL,CAOGnB,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,IAAD,IAAU;AACd,YAAMiB,QAAQ,GAAG,CAACjB,IAAI,CAACkB,IAAN,EAAY,GAAG3B,KAAf,CAAjB;;AACA,UAAIS,IAAI,CAACC,OAAT,EAAkB;AAChBT,QAAAA,QAAQ,CAACyB,QAAD,CAAR;AACA3B,QAAAA,KAAK,CAAC6B,UAAN,CAAiBnB,IAAI,CAACkB,IAAL,CAAUR,GAA3B,EAAgCV,IAAI,CAACkB,IAArC;AACD;AACF,KAdH,EAeGhB,KAfH,CAeUC,GAAD,IAAS;AACdjB,MAAAA,OAAO,CAACkB,KAAR,CAAe,2CAA0CD,GAAG,CAACE,OAAQ,EAArE;AACD,KAjBH;AAkBD,GAnBD;;AAqBA,QAAMe,cAAc,GAAIR,QAAD,IAAsB;AAC3CD,IAAAA,MAAM,CAACC,QAAD,CAAN;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,cAAc,EAAEQ,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE7B,KAArB;AAA4B,IAAA,UAAU,EAAED,KAAK,CAAC6B,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(':8081/');\n\nexport const disconnectSocket = () => {\n  console.log('Disconnecting socket...');\n  if (socket) socket.disconnect();\n};\n\nexport default function ChatMain(props: any) {\n  const [rooms, setRooms] = useState([]);\n  const getRooms = () => {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.success) setRooms(data.rooms);\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting room information:${err.message}`\n        );\n      });\n  };\n\n  useEffect(getRooms, []);\n\n  useEffect(() => {\n    socket.on('main', (data: any) => {\n      console.log('Websocket event received!');\n      setMessages((messages: any) => [...messages, data.data] as any);\n    });\n    return () => {\n      disconnectSocket();\n    };\n  }, [props.window._id]);\n\n  const create = (roomname: String) => {\n    fetch('/api/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ roomname: roomname, username: props.username }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const newRooms = [data.room, ...rooms] as any;\n        if (data.success) {\n          setRooms(newRooms);\n          props.openWindow(data.room._id, data.room);\n        }\n      })\n      .catch((err) => {\n        console.error(`Something wrong happened while creating:${err.message}`);\n      });\n  };\n\n  const createChatroom = (roomname: String) => {\n    create(roomname);\n  };\n\n  return (\n    <div className=\"main-chat\">\n      <ChatMainHead createChatroom={createChatroom} />\n      <ChatMainBody rooms={rooms} openWindow={props.openWindow} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}