{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\nexport default function ChatMain(props) {\n  const {\n    0: rooms,\n    1: setRooms\n  } = useState([]);\n\n  const getRooms = () => {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.success) setRooms(data.rooms);\n    }).catch(err => {\n      console.error(`Something wrong happened while getting room information:${err.message}`);\n    });\n  };\n\n  useEffect(getRooms, []);\n\n  const create = roomname => {\n    fetch('/api/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roomname: roomname,\n        username: props.username\n      })\n    }).then(res => res.json()).then(data => {\n      const newRooms = [data.room, ...rooms];\n\n      if (data.success) {\n        setRooms(newRooms);\n        console.log(data.room); // props.openWindow(data.room._id, data.room.roomname);\n\n        props.openWindow(data.room._id, data.room);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while creating:${err.message}`);\n    });\n  };\n\n  const createChatroom = roomname => {\n    create(roomname);\n  };\n\n  return __jsx(\"div\", {\n    className: \"main-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(ChatMainHead, {\n    createChatroom: createChatroom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), __jsx(ChatMainBody, {\n    rooms: rooms,\n    openWindow: props.openWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/chat-main.tsx"],"names":["React","useState","useEffect","ChatMainHead","ChatMainBody","ChatMain","props","rooms","setRooms","getRooms","fetch","method","headers","then","res","json","data","success","catch","err","console","error","message","create","roomname","body","JSON","stringify","username","newRooms","room","log","openWindow","_id","createChatroom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;AAC3C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMQ,QAAQ,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,KADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFS,KAAf,CAAL,CAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOSG,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,OAAT,EAAkBT,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACnB,KATH,EAUGW,KAVH,CAUUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CACG,2DAA0DF,GAAG,CAACG,OAAQ,EADzE;AAGD,KAdH;AAeD,GAhBD;;AAkBApB,EAAAA,SAAS,CAACO,QAAD,EAAW,EAAX,CAAT;;AAEA,QAAMc,MAAM,GAAIC,QAAD,IAAsB;AACnCd,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFU;AAKnBa,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBI,QAAAA,QAAQ,EAAEtB,KAAK,CAACsB;AAAtC,OAAf;AALa,KAAhB,CAAL,CAOGf,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,IAAD,IAAU;AACd,YAAMa,QAAQ,GAAG,CAACb,IAAI,CAACc,IAAN,EAAY,GAAGvB,KAAf,CAAjB;;AACA,UAAIS,IAAI,CAACC,OAAT,EAAkB;AAChBT,QAAAA,QAAQ,CAACqB,QAAD,CAAR;AACAT,QAAAA,OAAO,CAACW,GAAR,CAAYf,IAAI,CAACc,IAAjB,EAFgB,CAGhB;;AACAxB,QAAAA,KAAK,CAAC0B,UAAN,CAAiBhB,IAAI,CAACc,IAAL,CAAUG,GAA3B,EAAgCjB,IAAI,CAACc,IAArC;AACD;AACF,KAhBH,EAiBGZ,KAjBH,CAiBUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAe,2CAA0CF,GAAG,CAACG,OAAQ,EAArE;AACD,KAnBH;AAoBD,GArBD;;AAuBA,QAAMY,cAAc,GAAIV,QAAD,IAAsB;AAC3CD,IAAAA,MAAM,CAACC,QAAD,CAAN;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,cAAc,EAAEU,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE3B,KAArB;AAA4B,IAAA,UAAU,EAAED,KAAK,CAAC0B,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\n\nexport default function ChatMain(props: any) {\n  const [rooms, setRooms] = useState([]);\n  const getRooms = () => {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.success) setRooms(data.rooms);\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting room information:${err.message}`\n        );\n      });\n  };\n\n  useEffect(getRooms, []);\n\n  const create = (roomname: String) => {\n    fetch('/api/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ roomname: roomname, username: props.username }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const newRooms = [data.room, ...rooms] as any;\n        if (data.success) {\n          setRooms(newRooms);\n          console.log(data.room);\n          // props.openWindow(data.room._id, data.room.roomname);\n          props.openWindow(data.room._id, data.room);\n        }\n      })\n      .catch((err) => {\n        console.error(`Something wrong happened while creating:${err.message}`);\n      });\n  };\n\n  const createChatroom = (roomname: String) => {\n    create(roomname);\n  };\n\n  return (\n    <div className=\"main-chat\">\n      <ChatMainHead createChatroom={createChatroom} />\n      <ChatMainBody rooms={rooms} openWindow={props.openWindow} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}