{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Window from '../components/window';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(':8081/');\nexport default function Main() {\n  const {\n    0: maxZIndex,\n    1: setMaxZIndex\n  } = useState(0);\n  const {\n    0: windows,\n    1: setWindows\n  } = useState([]);\n  const {\n    0: lastPosition,\n    1: setLastPosition\n  } = useState({\n    x: 200,\n    y: 50\n  });\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  useEffect(() => {\n    if (localStorage.getItem('omega-talk-username')) {\n      setUsername(localStorage.getItem('omega-talk-username'));\n    }\n  }, []);\n  console.log(maxZIndex);\n\n  const openWindow = (_id, room) => {\n    const isOpened = windows.findIndex(window => window._id === _id);\n    console.log(maxZIndex);\n    const newWindow = {\n      _id,\n      roomname: room.roomname,\n      positionX: lastPosition.x + 20,\n      positionY: lastPosition.y + 20,\n      zIndex: maxZIndex + 1,\n      owner: room.owner,\n      participants: room.participants.length\n    };\n    console.log(newWindow);\n\n    if (isOpened === -1) {\n      setWindows(windows => [...windows, newWindow]);\n      setLastPosition({\n        x: newWindow.positionX,\n        y: newWindow.positionY\n      }); // add a user to the room\n\n      if (socket) {\n        console.log('tried to join');\n        socket.emit('joinroom', {\n          _id,\n          username\n        });\n      }\n    } else {\n      setWindows(windows => {\n        windows.map(item => {\n          if (item._id === _id) {\n            item.zIndex = maxZIndex + 1;\n          }\n\n          return item;\n        });\n      });\n    }\n  };\n\n  const closeWindow = _id => {\n    const newWindows = windows.filter(item => item._id !== _id);\n    setWindows(newWindows);\n  };\n\n  const signout = () => {\n    localStorage.removeItem('omega-talk-username');\n    setUsername('');\n  };\n\n  return __jsx(React.Fragment, null, username ? __jsx(React.Fragment, null, __jsx(Window, {\n    category: \"main\",\n    maxZIndex: maxZIndex,\n    username: username,\n    lastPosition: lastPosition,\n    setLastPosition: setLastPosition,\n    setMaxZIndex: setMaxZIndex,\n    openWindow: openWindow,\n    signout: signout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), windows.map(window => {\n    return __jsx(Window, {\n      key: window._id,\n      window: window,\n      username: username,\n      zIndex: window.zIndex,\n      maxZIndex: maxZIndex,\n      category: \"chat-room\",\n      closeWindow: closeWindow,\n      setMaxZIndex: setMaxZIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    });\n  })) : __jsx(Window, {\n    setUsername: setUsername,\n    category: \"username\",\n    maxZIndex: maxZIndex,\n    lastPosition: lastPosition,\n    setMaxZIndex: setMaxZIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main.tsx"],"names":["React","useState","useEffect","Window","socketIOClient","socket","Main","maxZIndex","setMaxZIndex","windows","setWindows","lastPosition","setLastPosition","x","y","username","setUsername","localStorage","getItem","console","log","openWindow","_id","room","isOpened","findIndex","window","newWindow","roomname","positionX","positionY","zIndex","owner","participants","length","emit","map","item","closeWindow","newWindows","filter","signout","removeItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Window from '../components/window';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(':8081/');\n\nexport default function Main() {\n  const [maxZIndex, setMaxZIndex] = useState(0);\n  const [windows, setWindows] = useState([] as any);\n  const [lastPosition, setLastPosition] = useState({ x: 200, y: 50 });\n  const [username, setUsername] = useState('' as any);\n\n  useEffect(() => {\n    if (localStorage.getItem('omega-talk-username')) {\n      setUsername(localStorage.getItem('omega-talk-username'));\n    }\n  }, []);\n  console.log(maxZIndex);\n  const openWindow = (_id: string, room: any) => {\n    const isOpened = windows.findIndex((window: any) => window._id === _id);\n    console.log(maxZIndex);\n    const newWindow = {\n      _id,\n      roomname: room.roomname,\n      positionX: lastPosition.x + 20,\n      positionY: lastPosition.y + 20,\n      zIndex: maxZIndex + 1,\n      owner: room.owner,\n      participants: room.participants.length,\n    };\n    console.log(newWindow);\n    if (isOpened === -1) {\n      setWindows((windows: any) => [...windows, newWindow] as any);\n      setLastPosition({ x: newWindow.positionX, y: newWindow.positionY });\n      // add a user to the room\n      if (socket) {\n        console.log('tried to join');\n        socket.emit('joinroom', {\n          _id,\n          username,\n        });\n      }\n    } else {\n      setWindows((windows: any) => {\n        windows.map((item: any) => {\n          if (item._id === _id) {\n            item.zIndex = maxZIndex + 1;\n          }\n          return item;\n        });\n      });\n    }\n  };\n\n  const closeWindow = (_id: any) => {\n    const newWindows = windows.filter((item: any) => item._id !== _id);\n    setWindows(newWindows as any);\n  };\n\n  const signout = () => {\n    localStorage.removeItem('omega-talk-username');\n    setUsername('');\n  };\n\n  return (\n    <>\n      {username ? (\n        <>\n          <Window\n            category=\"main\"\n            maxZIndex={maxZIndex}\n            username={username}\n            lastPosition={lastPosition}\n            setLastPosition={setLastPosition}\n            setMaxZIndex={setMaxZIndex}\n            openWindow={openWindow}\n            signout={signout}\n          />\n          {windows.map((window: any) => {\n            return (\n              <Window\n                key={window._id}\n                window={window}\n                username={username}\n                zIndex={window.zIndex}\n                maxZIndex={maxZIndex}\n                category=\"chat-room\"\n                closeWindow={closeWindow}\n                setMaxZIndex={setMaxZIndex}\n              />\n            );\n          })}\n        </>\n      ) : (\n        <Window\n          setUsername={setUsername}\n          category=\"username\"\n          maxZIndex={maxZIndex}\n          lastPosition={lastPosition}\n          setMaxZIndex={setMaxZIndex}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}