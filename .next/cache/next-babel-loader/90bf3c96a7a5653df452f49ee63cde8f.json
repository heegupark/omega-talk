{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/room.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\nexport default function Room(props) {\n  _s();\n\n  var _roommainRef$current;\n\n  var _useState = useState([]),\n      messages = _useState[0],\n      setMessages = _useState[1];\n\n  var roommainRef = React.useRef(null);\n\n  var sendMessage = function sendMessage(message) {\n    fetch('/api/message', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message: message\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        console.log(data);\n        setMessages([].concat(_toConsumableArray(messages), [data.data]));\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while sending a message:\".concat(err.message));\n    });\n  };\n\n  var getMessages = function getMessages() {\n    fetch(\"/api/getmessage\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: props.window._id\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        console.log(data);\n        setMessages(data.data);\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting messages:\".concat(err.message));\n    });\n  };\n\n  useEffect(function () {\n    getMessages();\n  }, []);\n  return __jsx(\"div\", {\n    className: \"room-main\",\n    ref: roommainRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(RoomChatMain, {\n    roommainHeight: (_roommainRef$current = roommainRef.current) === null || _roommainRef$current === void 0 ? void 0 : _roommainRef$current.clientHeight,\n    username: props.username,\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), __jsx(RoomChatInput, {\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Room, \"CGbnYI7LEPuBZgAW/6ytRwCAEBA=\");\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/room.tsx"],"names":["React","useState","useEffect","RoomChatMain","RoomChatInput","Room","props","messages","setMessages","roommainRef","useRef","sendMessage","message","fetch","method","headers","body","JSON","stringify","_id","window","roomname","username","then","res","json","data","success","console","log","err","error","getMessages","current","clientHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\n\nexport default function Room(props: any) {\n  const [messages, setMessages] = useState([]);\n  const roommainRef = React.useRef<HTMLDivElement>(null);\n\n  const sendMessage = (message: string) => {\n    fetch('/api/message', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          console.log(data);\n          setMessages([...messages, data.data] as any);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while sending a message:${err.message}`\n        );\n      });\n  };\n  const getMessages = () => {\n    fetch(`/api/getmessage`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        _id: props.window._id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          console.log(data);\n          setMessages(data.data);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  useEffect(() => {\n    getMessages();\n  }, []);\n  return (\n    <div className=\"room-main\" ref={roommainRef}>\n      <RoomChatMain\n        roommainHeight={roommainRef.current?.clientHeight}\n        username={props.username}\n        messages={messages}\n      />\n      <RoomChatInput sendMessage={sendMessage} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}