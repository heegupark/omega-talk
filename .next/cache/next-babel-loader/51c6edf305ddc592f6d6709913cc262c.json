{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\nimport socketIOClient from 'socket.io-client';\nvar socket = socketIOClient(':8081/');\nexport var initiateSocket = function initiateSocket(room) {\n  console.log(\"Connecting socket...\");\n  if (socket && room) socket.emit('join', room);\n};\nexport var disconnectSocket = function disconnectSocket() {\n  console.log('Disconnecting socket...');\n  if (socket) socket.disconnect();\n};\nexport var subscribeToChat = function subscribeToChat(cb) {\n  if (!socket) return true;\n  socket.on('chat', function (msg) {\n    console.log('Websocket event received!');\n    return cb(null, msg);\n  });\n};\nexport default function Room(props) {\n  var _roommainRef$current;\n\n  var _useState = useState([]),\n      messages = _useState[0],\n      setMessages = _useState[1];\n\n  var roommainRef = React.useRef(null);\n\n  var sendMessage = function sendMessage(message) {\n    if (socket) {\n      socket.emit('chat', {\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message: message\n      });\n    } // fetch('/api/message', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({\n    //     _id: props.window._id,\n    //     roomname: props.window.roomname,\n    //     username: props.username,\n    //     message,\n    //   }),\n    // })\n    //   .then((res) => res.json())\n    //   .then((data: any) => {\n    //     if (data.success) {\n    //       setMessages([...messages, data.data] as any);\n    //     }\n    //   })\n    //   .catch((err) => {\n    //     console.error(\n    //       `Something wrong happened while sending a message:${err.message}`\n    //     );\n    //   });\n\n  };\n\n  var getMessages = function getMessages() {\n    fetch(\"/api/getmessage\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: props.window._id\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        console.log(data);\n        setMessages(data.data);\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting messages:\".concat(err.message));\n    });\n  };\n\n  useEffect(function () {\n    getMessages();\n  }, []);\n  useEffect(function () {\n    var room = props.window._id;\n    if (room) initiateSocket(room);\n    subscribeToChat(function (err, data) {\n      if (err) return;\n      setMessages(function (messages) {\n        return [].concat(_toConsumableArray(messages), [data.data]);\n      });\n    });\n    return function () {\n      disconnectSocket();\n    }; // socket.on(`room-${props.window._id}`, (data: any) => {\n    //   console.log('via socket', data.data);\n    //   console.log(messages);\n    //   const newMessages = [...messages, data.data];\n    //   setMessages(newMessages as any);\n    // });\n  }, [props.window._id]);\n  return __jsx(\"div\", {\n    className: \"room-main\",\n    ref: roommainRef\n  }, __jsx(RoomChatMain, {\n    roommainHeight: (_roommainRef$current = roommainRef.current) === null || _roommainRef$current === void 0 ? void 0 : _roommainRef$current.clientHeight,\n    username: props.username,\n    messages: messages\n  }), __jsx(RoomChatInput, {\n    sendMessage: sendMessage\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}