{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Rnd } from 'react-rnd';\nimport Left from '../components/left';\nimport ChatMain from '../components/chat-main';\nimport { Keyframes } from 'react-spring/renderprops';\nvar Content = Keyframes.Spring({\n  from: {\n    opacity: 0,\n    width: 50,\n    height: 50,\n    background: 'black'\n  },\n  opacity: 1,\n  width: 80,\n  height: 80,\n  background: 'tomato'\n});\n_c = Content;\n\nvar Main = /*#__PURE__*/function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props); // this.state = {\n    //   position: { x: 200, y: 50 },\n    //   tempPosition: { x: 0, y: 0 },\n    //   size: { width: 400, height: 640 },\n    //   tempSize: { width: 400, height: 640 },\n    //   isExpanded: false,\n    //   isMinized: false,\n    //   isDraggable: true\n    // }\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      position: {\n        x: 200,\n        y: 50\n      },\n      tempPosition: {\n        x: 0,\n        y: 0\n      },\n      size: {\n        width: 400,\n        height: 640\n      },\n      tempSize: {\n        width: 400,\n        height: 640\n      },\n      isExpanded: false,\n      isMinized: false,\n      isDraggable: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleExpand\", function () {\n      var _this$state = _this.state,\n          isExpanded = _this$state.isExpanded,\n          tempPosition = _this$state.tempPosition,\n          tempSize = _this$state.tempSize,\n          position = _this$state.position,\n          size = _this$state.size;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          setIsDraggable = _assertThisInitialize.setIsDraggable,\n          setIsExpanded = _assertThisInitialize.setIsExpanded,\n          setIsMinized = _assertThisInitialize.setIsMinized,\n          setPosition = _assertThisInitialize.setPosition,\n          setTempPosition = _assertThisInitialize.setTempPosition,\n          setSize = _assertThisInitialize.setSize,\n          setTempSize = _assertThisInitialize.setTempSize;\n\n      if (_this.state.isExpanded) {\n        setPosition({\n          x: tempPosition.x,\n          y: tempPosition.y\n        });\n        setSize({\n          width: tempSize.width,\n          height: tempSize.height\n        });\n        setIsDraggable(true);\n      } else {\n        setTempPosition({\n          x: position.x,\n          y: position.y\n        });\n        setPosition({\n          x: 0,\n          y: 0\n        });\n        setTempSize({\n          width: size.width,\n          height: size.height\n        });\n        setSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n        setIsDraggable(false);\n      }\n\n      setIsExpanded(!isExpanded);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMinimize\", function () {\n      var _this$state2 = _this.state,\n          tempPosition = _this$state2.tempPosition,\n          position = _this$state2.position,\n          isMinized = _this$state2.isMinized;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          setIsMinized = _assertThisInitialize2.setIsMinized,\n          setPosition = _assertThisInitialize2.setPosition,\n          setTempPosition = _assertThisInitialize2.setTempPosition;\n\n      if (isMinized) {\n        setPosition({\n          x: position.x,\n          y: tempPosition.y\n        });\n      } else {\n        setTempPosition({\n          x: position.x,\n          y: position.y\n        });\n        setPosition({\n          x: position.x,\n          y: window.innerHeight - 50\n        });\n      }\n\n      setIsMinized(!isMinized);\n    });\n\n    _this.setPosition = _this.setPosition.bind(_assertThisInitialized(_this));\n    _this.setTempPosition = _this.setTempPosition.bind(_assertThisInitialized(_this));\n    _this.setSize = _this.setSize.bind(_assertThisInitialized(_this));\n    _this.setTempSize = _this.setTempSize.bind(_assertThisInitialized(_this));\n    _this.setIsExpanded = _this.setIsExpanded.bind(_assertThisInitialized(_this));\n    _this.setIsMinized = _this.setIsMinized.bind(_assertThisInitialized(_this));\n    _this.setIsDraggable = _this.setIsDraggable.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"setPosition\",\n    value: function setPosition(position) {\n      this.setState({\n        position: {\n          x: position.x,\n          y: position.y\n        }\n      });\n    }\n  }, {\n    key: \"setTempPosition\",\n    value: function setTempPosition(position) {\n      this.setState({\n        tempPosition: {\n          x: position.x,\n          y: position.y\n        }\n      });\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(size) {\n      this.setState({\n        size: {\n          width: size.width,\n          height: size.height\n        }\n      });\n    }\n  }, {\n    key: \"setTempSize\",\n    value: function setTempSize(size) {\n      this.setState({\n        tempSize: {\n          width: size.width,\n          height: size.height\n        }\n      });\n    }\n  }, {\n    key: \"setIsExpanded\",\n    value: function setIsExpanded(isExpanded) {\n      this.setState({\n        isExpanded: isExpanded\n      });\n    }\n  }, {\n    key: \"setIsMinized\",\n    value: function setIsMinized(isMinized) {\n      this.setState({\n        isMinized: isMinized\n      });\n    }\n  }, {\n    key: \"setIsDraggable\",\n    value: function setIsDraggable(isDraggable) {\n      this.setState({\n        isDraggable: isDraggable\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = __jsx(Rnd, {\n        \"default\": {\n          x: position.x,\n          y: position.y,\n          width: size.width,\n          height: size.height\n        },\n        position: {\n          x: position.x,\n          y: position.y\n        },\n        size: {\n          width: size.width,\n          height: size.height\n        },\n        minWidth: 320,\n        minHeight: 640,\n        onDragStop: function onDragStop(e, d) {\n          setPosition({\n            x: d.x,\n            y: d.y\n          });\n        },\n        onResizeStop: function onResizeStop(e, direction, ref, delta, position) {\n          console.log(ref.style.width);\n          setSize({\n            width: Number(ref.style.width.split('px')[0]),\n            height: Number(ref.style.height.split('px')[0])\n          });\n        },\n        disableDragging: !isDraggable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, __jsx(Left, {\n        handleMinimize: handleMinimize,\n        handleExpand: handleExpand,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        className: \"main-chat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, __jsx(ChatMain, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }))));\n\n      return __jsx(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 12\n        }\n      }, element);\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main.tsx"],"names":["React","Rnd","Left","ChatMain","Keyframes","Content","Spring","from","opacity","width","height","background","Main","props","position","x","y","tempPosition","size","tempSize","isExpanded","isMinized","isDraggable","state","setIsDraggable","setIsExpanded","setIsMinized","setPosition","setTempPosition","setSize","setTempSize","window","innerWidth","innerHeight","bind","setState","element","e","d","direction","ref","delta","console","log","style","Number","split","handleMinimize","handleExpand","Component"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Rnd } from 'react-rnd';\nimport Left from '../components/left';\nimport ChatMain from '../components/chat-main';\nimport { Keyframes, animated, config } from 'react-spring/renderprops';\n\nconst Content = Keyframes.Spring({\n  from: { opacity: 0, width: 50, height: 50, background: 'black' },\n  opacity: 1,\n  width: 80,\n  height: 80,\n  background: 'tomato',\n});\ntype State = {\n  position: { x: number; y: number };\n  tempPosition: { x: number; y: number };\n  size: { width: number; height: number };\n  tempSize: { width: number; height: number };\n  isExpanded: boolean;\n  isMinized: boolean;\n  isDraggable: boolean;\n};\nexport default class Main extends React.Component<State> {\n  state: State = {\n    position: { x: 200, y: 50 },\n    tempPosition: { x: 0, y: 0 },\n    size: { width: 400, height: 640 },\n    tempSize: { width: 400, height: 640 },\n    isExpanded: false,\n    isMinized: false,\n    isDraggable: true,\n  };\n\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   position: { x: 200, y: 50 },\n    //   tempPosition: { x: 0, y: 0 },\n    //   size: { width: 400, height: 640 },\n    //   tempSize: { width: 400, height: 640 },\n    //   isExpanded: false,\n    //   isMinized: false,\n    //   isDraggable: true\n    // }\n    this.setPosition = this.setPosition.bind(this);\n    this.setTempPosition = this.setTempPosition.bind(this);\n    this.setSize = this.setSize.bind(this);\n    this.setTempSize = this.setTempSize.bind(this);\n    this.setIsExpanded = this.setIsExpanded.bind(this);\n    this.setIsMinized = this.setIsMinized.bind(this);\n    this.setIsDraggable = this.setIsDraggable.bind(this);\n  }\n\n  setPosition(position) {\n    this.setState({\n      position: { x: position.x, y: position.y },\n    });\n  }\n  setTempPosition(position) {\n    this.setState({\n      tempPosition: { x: position.x, y: position.y },\n    });\n  }\n  setSize(size) {\n    this.setState({\n      size: { width: size.width, height: size.height },\n    });\n  }\n  setTempSize(size) {\n    this.setState({\n      tempSize: { width: size.width, height: size.height },\n    });\n  }\n  setIsExpanded(isExpanded) {\n    this.setState({\n      isExpanded: isExpanded,\n    });\n  }\n  setIsMinized(isMinized) {\n    this.setState({\n      isMinized: isMinized,\n    });\n  }\n  setIsDraggable(isDraggable) {\n    this.setState({\n      isDraggable: isDraggable,\n    });\n  }\n\n  handleExpand = () => {\n    const { isExpanded, tempPosition, tempSize, position, size } = this.state;\n    const {\n      setIsDraggable,\n      setIsExpanded,\n      setIsMinized,\n      setPosition,\n      setTempPosition,\n      setSize,\n      setTempSize,\n    } = this;\n    if (this.state.isExpanded) {\n      setPosition({ x: tempPosition.x, y: tempPosition.y });\n      setSize({ width: tempSize.width, height: tempSize.height });\n      setIsDraggable(true);\n    } else {\n      setTempPosition({ x: position.x, y: position.y });\n      setPosition({ x: 0, y: 0 });\n      setTempSize({ width: size.width, height: size.height });\n      setSize({ width: window.innerWidth, height: window.innerHeight });\n      setIsDraggable(false);\n    }\n    setIsExpanded(!isExpanded);\n  };\n\n  handleMinimize = () => {\n    const { tempPosition, position, isMinized } = this.state;\n    const { setIsMinized, setPosition, setTempPosition } = this;\n    if (isMinized) {\n      setPosition({ x: position.x, y: tempPosition.y });\n    } else {\n      setTempPosition({ x: position.x, y: position.y });\n      setPosition({ x: position.x, y: window.innerHeight - 50 });\n    }\n    setIsMinized(!isMinized);\n  };\n\n  render() {\n    const element = (\n      <Rnd\n        default={{\n          x: position.x,\n          y: position.y,\n          width: size.width,\n          height: size.height,\n        }}\n        position={{\n          x: position.x,\n          y: position.y,\n        }}\n        size={{\n          width: size.width,\n          height: size.height,\n        }}\n        minWidth={320}\n        minHeight={640}\n        onDragStop={(e, d) => {\n          setPosition({ x: d.x, y: d.y });\n        }}\n        onResizeStop={(e, direction, ref, delta, position) => {\n          console.log(ref.style.width);\n          setSize({\n            width: Number(ref.style.width.split('px')[0]),\n            height: Number(ref.style.height.split('px')[0]),\n          });\n        }}\n        disableDragging={!isDraggable}\n      >\n        <div className=\"box\">\n          <div className=\"left\">\n            <Left handleMinimize={handleMinimize} handleExpand={handleExpand} />\n          </div>\n          <div className=\"main-chat\">\n            <ChatMain />\n          </div>\n        </div>\n      </Rnd>\n    );\n    return <Content>{element}</Content>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}