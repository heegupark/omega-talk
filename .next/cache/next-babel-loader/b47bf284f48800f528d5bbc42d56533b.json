{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport ChatMainHead from './chat-main-head';\nimport ChatMainBody from './chat-main-body';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(`:${process.env.socketPort}/`);\nexport default function ChatMain(props) {\n  const {\n    0: rooms,\n    1: setRooms\n  } = useState([]);\n\n  const getRooms = () => {\n    fetch('/api/rooms', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.success) setRooms(data.rooms);\n    }).catch(err => {\n      console.error(`Something wrong happened while getting room information:${err.message}`);\n    });\n  };\n\n  useEffect(getRooms, []);\n  useEffect(() => {\n    socket.on('main', data => {\n      if (data.success) {\n        setRooms(rooms => [data.data, ...rooms]);\n\n        if (props.username === data.data.owner) {\n          props.openWindow(data.data._id, data.data);\n        }\n      }\n    });\n  }, []);\n\n  const create = roomname => {\n    const roomData = {\n      roomname: roomname,\n      username: props.username\n    };\n\n    if (socket) {\n      socket.emit('create-room', roomData);\n    }\n  };\n\n  const createChatroom = roomname => {\n    create(roomname);\n  };\n\n  return __jsx(\"div\", {\n    className: \"main-chat\"\n  }, __jsx(ChatMainHead, {\n    createChatroom: createChatroom\n  }), __jsx(ChatMainBody, {\n    rooms: rooms,\n    openWindow: props.openWindow\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}