{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useLocalStorage } from 'react';\nimport Window from '../components/window';\nexport default function Main() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      maxZIndex = _useState[0],\n      setMaxZIndex = _useState[1];\n\n  var _useState2 = useState([]),\n      windows = _useState2[0],\n      setWindows = _useState2[1];\n\n  var _useState3 = useState({\n    x: 200,\n    y: 50\n  }),\n      lastPosition = _useState3[0],\n      setLastPosition = _useState3[1];\n\n  var _useLocalStorage = useLocalStorage('omega-talk-username'),\n      username = _useLocalStorage[0],\n      setUsername = _useLocalStorage[1];\n\n  var openWindow = function openWindow(_id, room) {\n    var isOpened = windows.findIndex(function (item) {\n      return item._id === _id;\n    });\n    var newWindow = {\n      _id: _id,\n      roomname: room.roomname,\n      positionX: lastPosition.x + 20,\n      positionY: lastPosition.y + 20,\n      zIndex: maxZIndex + 1,\n      owner: room.owner,\n      participants: room.participants.length\n    };\n\n    if (isOpened === -1) {\n      setMaxZIndex(maxZIndex + 1);\n      setWindows([].concat(_toConsumableArray(windows), [newWindow]));\n      setLastPosition({\n        x: newWindow.positionX,\n        y: newWindow.positionY\n      });\n    } else {\n      var newWindows = windows.map(function (item) {\n        if (item._id === _id) {\n          item.zIndex = maxZIndex + 1;\n        }\n\n        return item;\n      });\n      setWindows(newWindows);\n    }\n  };\n\n  var closeWindow = function closeWindow(_id) {\n    var newWindows = windows.filter(function (item) {\n      return item._id !== _id;\n    });\n    setWindows(newWindows);\n  };\n\n  var signout = function signout() {\n    localStorage.removeItem('omega-talk-username');\n  };\n\n  return __jsx(React.Fragment, null, username ? __jsx(React.Fragment, null, __jsx(Window, {\n    category: \"main\",\n    maxZIndex: maxZIndex,\n    username: username,\n    lastPosition: lastPosition,\n    setMaxZIndex: setMaxZIndex,\n    openWindow: openWindow,\n    signout: signout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), windows.map(function (window) {\n    return __jsx(Window, {\n      key: window._id,\n      window: window,\n      username: username,\n      zIndex: window.zIndex,\n      maxZIndex: maxZIndex,\n      category: \"chat-room\",\n      closeWindow: closeWindow,\n      setMaxZIndex: setMaxZIndex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    });\n  })) : __jsx(Window, {\n    setUsername: setUsername,\n    category: \"username\",\n    maxZIndex: maxZIndex,\n    lastPosition: lastPosition,\n    setMaxZIndex: setMaxZIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Main, \"GeNAA0F4G2AQ3U4tPRheOEQUOfI=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main.tsx"],"names":["React","useState","useLocalStorage","Window","Main","maxZIndex","setMaxZIndex","windows","setWindows","x","y","lastPosition","setLastPosition","username","setUsername","openWindow","_id","room","isOpened","findIndex","item","newWindow","roomname","positionX","positionY","zIndex","owner","participants","length","newWindows","map","closeWindow","filter","signout","localStorage","removeItem","window"],"mappings":"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","sourcesContent":["import React, { useState, useLocalStorage } from 'react';\nimport Window from '../components/window';\n\nexport default function Main() {\n  const [maxZIndex, setMaxZIndex] = useState(0);\n  const [windows, setWindows] = useState([] as any);\n  const [lastPosition, setLastPosition] = useState({ x: 200, y: 50 });\n  const [username, setUsername] = useLocalStorage('omega-talk-username');\n\n  const openWindow = (_id: any, room: any) => {\n    const isOpened = windows.findIndex((item: any) => item._id === _id);\n    const newWindow = {\n      _id,\n      roomname: room.roomname,\n      positionX: lastPosition.x + 20,\n      positionY: lastPosition.y + 20,\n      zIndex: maxZIndex + 1,\n      owner: room.owner,\n      participants: room.participants.length,\n    };\n    if (isOpened === -1) {\n      setMaxZIndex(maxZIndex + 1);\n      setWindows([...windows, newWindow] as any);\n      setLastPosition({ x: newWindow.positionX, y: newWindow.positionY });\n    } else {\n      const newWindows = windows.map((item: any) => {\n        if (item._id === _id) {\n          item.zIndex = maxZIndex + 1;\n        }\n        return item;\n      });\n      setWindows(newWindows as any);\n    }\n  };\n\n  const closeWindow = (_id: any) => {\n    const newWindows = windows.filter((item: any) => item._id !== _id);\n    setWindows(newWindows as any);\n  };\n\n  const signout = () => {\n    localStorage.removeItem('omega-talk-username');\n  };\n\n  return (\n    <>\n      {username ? (\n        <>\n          <Window\n            category=\"main\"\n            maxZIndex={maxZIndex}\n            username={username}\n            lastPosition={lastPosition}\n            setMaxZIndex={setMaxZIndex}\n            openWindow={openWindow}\n            signout={signout}\n          />\n          {windows.map((window: any) => {\n            return (\n              <Window\n                key={window._id}\n                window={window}\n                username={username}\n                zIndex={window.zIndex}\n                maxZIndex={maxZIndex}\n                category=\"chat-room\"\n                closeWindow={closeWindow}\n                setMaxZIndex={setMaxZIndex}\n              />\n            );\n          })}\n        </>\n      ) : (\n        <Window\n          setUsername={setUsername}\n          category=\"username\"\n          maxZIndex={maxZIndex}\n          lastPosition={lastPosition}\n          setMaxZIndex={setMaxZIndex}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}