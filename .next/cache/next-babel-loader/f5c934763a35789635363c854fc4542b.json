{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/create-chatroom.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    box: {\n      width: '300px',\n      height: '100%',\n      textAlign: 'center',\n      fontSize: '14px'\n    },\n    title: {\n      width: '100%',\n      height: '80px',\n      paddingTop: '30px',\n      color: 'rgb(157, 157, 157)',\n      backgroundColor: 'rgb(246, 246, 246)'\n    },\n    middle: {\n      padding: '20px 10px',\n      borderTop: '1px solid rgb(228, 228, 228)'\n    },\n    input: {\n      width: '100%',\n      color: 'rgb(66, 54, 48)',\n      '& label.Mui-focused': {\n        color: 'rgb(255, 192, 47)'\n      },\n      '& .MuiOutlinedInput-root': {\n        '&:hover fieldset': {\n          borderColor: 'rgb(255, 229, 0)'\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: 'rgb(255, 192, 47)'\n        }\n      }\n    },\n    bottom: {\n      '& > *': {\n        margin: theme.spacing(1)\n      },\n      borderTop: '1px solid rgb(228, 228, 228)'\n    },\n    createBtn: {\n      backgroundColor: 'rgb(255, 229, 0)',\n      borderRadius: '50px',\n      fontSize: '11px',\n      color: 'rgb(66, 54, 48)',\n      width: '100px',\n      border: '1px solid rgb(228, 228, 228)'\n    },\n    cancelBtn: {\n      backgroundColor: 'white',\n      borderRadius: '50px',\n      fontSize: '11px',\n      color: 'rgb(66, 54, 48)',\n      width: '100px',\n      border: '1px solid rgb(228, 228, 228)'\n    }\n  });\n});\nexport default function CreateChatroom(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      roomname = _useState[0],\n      setRoomname = _useState[1];\n\n  var _useState2 = useState('Type room name'),\n      label = _useState2[0],\n      setLabel = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var handleCreateBtnBlick = function handleCreateBtnBlick() {\n    console.log(roomname);\n\n    if (roomname.length < 1) {\n      setError(true);\n      setLabel('Please type you');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Create Chatroom\"), __jsx(\"div\", {\n    className: classes.middle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    error: error,\n    className: classes.input,\n    id: \"outlined-basic\",\n    label: \"Type room name\",\n    variant: \"outlined\",\n    size: \"small\",\n    value: roomname,\n    onChange: function onChange(e) {\n      setRoomname(e.target.value);\n    },\n    autoComplete: \"off\",\n    inputProps: {\n      style: {\n        fontSize: 12\n      }\n    },\n    InputLabelProps: {\n      style: {\n        fontSize: 12\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: classes.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    disableElevation: true,\n    className: classes.createBtn,\n    onClick: handleCreateBtnBlick,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Create\"), __jsx(Button, {\n    disableElevation: true,\n    onClick: function onClick() {\n      return props.handleClose();\n    },\n    className: classes.cancelBtn,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n}\n\n_s(CreateChatroom, \"UVheRXMl2lc5joNE3x0hlo0D0go=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreateChatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChatroom\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/create-chatroom.tsx"],"names":["React","useState","TextField","makeStyles","createStyles","Button","useStyles","theme","box","width","height","textAlign","fontSize","title","paddingTop","color","backgroundColor","middle","padding","borderTop","input","borderColor","bottom","margin","spacing","createBtn","borderRadius","border","cancelBtn","CreateChatroom","props","classes","roomname","setRoomname","label","setLabel","error","setError","handleCreateBtnBlick","console","log","length","e","target","value","style","handleClose"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    box: {\n      width: '300px',\n      height: '100%',\n      textAlign: 'center',\n      fontSize: '14px',\n    },\n    title: {\n      width: '100%',\n      height: '80px',\n      paddingTop: '30px',\n      color: 'rgb(157, 157, 157)',\n      backgroundColor: 'rgb(246, 246, 246)',\n    },\n    middle: {\n      padding: '20px 10px',\n      borderTop: '1px solid rgb(228, 228, 228)',\n    },\n    input: {\n      width: '100%',\n      color: 'rgb(66, 54, 48)',\n      '& label.Mui-focused': {\n        color: 'rgb(255, 192, 47)',\n      },\n      '& .MuiOutlinedInput-root': {\n        '&:hover fieldset': {\n          borderColor: 'rgb(255, 229, 0)',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: 'rgb(255, 192, 47)',\n        },\n      },\n    },\n    bottom: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n      borderTop: '1px solid rgb(228, 228, 228)',\n    },\n    createBtn: {\n      backgroundColor: 'rgb(255, 229, 0)',\n      borderRadius: '50px',\n      fontSize: '11px',\n      color: 'rgb(66, 54, 48)',\n      width: '100px',\n      border: '1px solid rgb(228, 228, 228)',\n    },\n    cancelBtn: {\n      backgroundColor: 'white',\n      borderRadius: '50px',\n      fontSize: '11px',\n      color: 'rgb(66, 54, 48)',\n      width: '100px',\n      border: '1px solid rgb(228, 228, 228)',\n    },\n  })\n);\n\nexport default function CreateChatroom(props: any) {\n  const classes = useStyles();\n  const [roomname, setRoomname] = useState('');\n  const [label, setLabel] = useState('Type room name');\n  const [error, setError] = useState(false);\n\n  const handleCreateBtnBlick = () => {\n    console.log(roomname);\n    if (roomname.length < 1) {\n      setError(true);\n      setLabel('Please type you');\n    }\n  };\n\n  return (\n    <div className={classes.box}>\n      <div className={classes.title}>Create Chatroom</div>\n      <div className={classes.middle}>\n        <TextField\n          error={error}\n          className={classes.input}\n          id=\"outlined-basic\"\n          label=\"Type room name\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={roomname}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setRoomname(e.target.value);\n          }}\n          autoComplete=\"off\"\n          inputProps={{ style: { fontSize: 12 } }}\n          InputLabelProps={{ style: { fontSize: 12 } }}\n        />\n      </div>\n      <div className={classes.bottom}>\n        <Button\n          disableElevation\n          className={classes.createBtn}\n          onClick={handleCreateBtnBlick}\n          variant=\"contained\"\n        >\n          Create\n        </Button>\n        <Button\n          disableElevation\n          onClick={() => props.handleClose()}\n          className={classes.cancelBtn}\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}