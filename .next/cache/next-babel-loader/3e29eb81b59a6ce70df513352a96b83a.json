{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/room.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(`:${process.env.socketPort}/`);\nexport default function Room(props) {\n  var _roommainRef$current;\n\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const roommainRef = React.useRef(null);\n\n  const sendMessage = message => {\n    if (socket) {\n      socket.emit('chat', {\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message\n      });\n    }\n  };\n\n  const getMessages = () => {\n    fetch(`/api/getmessage`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: props.window._id\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setMessages(data.data);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while getting messages:${err.message}`);\n    });\n  };\n\n  useEffect(() => {\n    getMessages();\n  }, []);\n  useEffect(() => {\n    let isMounted = true;\n    const room = props.window._id;\n\n    if (isMounted) {\n      socket.on(`room-${room}`, data => {\n        if (data.data) {\n          setMessages(messages => [...messages, data.data]);\n        }\n      });\n    }\n\n    return () => {\n      isMounted: false;\n    };\n  }, [props.window._id]);\n  return __jsx(\"div\", {\n    className: \"room-main\",\n    ref: roommainRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(RoomChatMain, {\n    roommainHeight: (_roommainRef$current = roommainRef.current) === null || _roommainRef$current === void 0 ? void 0 : _roommainRef$current.clientHeight,\n    username: props.username,\n    roomId: props.window._id,\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), __jsx(RoomChatInput, {\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/room.tsx"],"names":["React","useState","useEffect","RoomChatMain","RoomChatInput","socketIOClient","socket","process","env","socketPort","Room","props","messages","setMessages","roommainRef","useRef","sendMessage","message","emit","_id","window","roomname","username","getMessages","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","catch","err","console","error","isMounted","room","on","current","clientHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomChatMain from '../components/room-chat-main';\nimport RoomChatInput from '../components/room-chat-input';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(`:${process.env.socketPort}/`);\n\nexport default function Room(props: any) {\n  const [messages, setMessages] = useState([]);\n  const roommainRef = React.useRef<HTMLDivElement>(null);\n\n  const sendMessage = (message: string) => {\n    if (socket) {\n      socket.emit('chat', {\n        _id: props.window._id,\n        roomname: props.window.roomname,\n        username: props.username,\n        message,\n      });\n    }\n  };\n  const getMessages = () => {\n    fetch(`/api/getmessage`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        _id: props.window._id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          setMessages(data.data);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  useEffect(() => {\n    getMessages();\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true;\n    const room = props.window._id;\n    if (isMounted) {\n      socket.on(`room-${room}`, (data: any) => {\n        if (data.data) {\n          setMessages((messages: any) => [...messages, data.data] as any);\n        }\n      });\n    }\n    return () => {\n      isMounted: false;\n    };\n  }, [props.window._id]);\n\n  return (\n    <div className=\"room-main\" ref={roommainRef}>\n      <RoomChatMain\n        roommainHeight={roommainRef.current?.clientHeight}\n        username={props.username}\n        roomId={props.window._id}\n        messages={messages}\n      />\n      <RoomChatInput sendMessage={sendMessage} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}