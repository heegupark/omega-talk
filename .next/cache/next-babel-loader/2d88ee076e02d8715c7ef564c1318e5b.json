{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main-mobile.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Window from '../components/window';\nimport socketIOClient from 'socket.io-client';\nvar socket = socketIOClient(\":\".concat(process.env.socketPort, \"/\"));\nexport default function Main(props) {\n  _s();\n\n  var _useState = useState(0),\n      maxZIndex = _useState[0],\n      setMaxZIndex = _useState[1];\n\n  var _useState2 = useState([]),\n      windows = _useState2[0],\n      setWindows = _useState2[1];\n\n  var _useState3 = useState({\n    x: 200,\n    y: 50\n  }),\n      lastPosition = _useState3[0],\n      setLastPosition = _useState3[1];\n\n  var _useState4 = useState(''),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  useEffect(function () {\n    if (localStorage.getItem('omega-talk-username')) {\n      setUsername(localStorage.getItem('omega-talk-username'));\n    }\n  }, []);\n\n  var openWindow = function openWindow(_id, room) {\n    var isOpened = windows.findIndex(function (window) {\n      return window._id === _id;\n    });\n    var newWindow = {\n      _id: _id,\n      roomname: room.roomname,\n      positionX: lastPosition.x + 20,\n      positionY: lastPosition.y + 20,\n      zIndex: maxZIndex + 100,\n      owner: room.owner,\n      participants: room.participants.length\n    };\n\n    if (isOpened === -1) {\n      setWindows(function (windows) {\n        return [].concat(_toConsumableArray(windows), [newWindow]);\n      });\n      setLastPosition({\n        x: newWindow.positionX,\n        y: newWindow.positionY\n      });\n\n      if (socket) {\n        socket.emit('joinroom', {\n          _id: _id,\n          username: username\n        });\n      }\n    } else {\n      var newWindows = windows.map(function (window) {\n        if (window._id === _id) {\n          window.zIndex = maxZIndex + 1;\n        }\n\n        return window;\n      });\n      setWindows(function () {\n        return newWindows;\n      });\n    }\n  };\n\n  var signout = function signout() {\n    localStorage.removeItem('omega-talk-username');\n    setUsername('');\n  };\n\n  return __jsx(React.Fragment, null, username ? __jsx(Window, {\n    category: \"main\",\n    maxZIndex: maxZIndex,\n    username: username,\n    lastPosition: lastPosition,\n    setLastPosition: setLastPosition,\n    setMaxZIndex: setMaxZIndex,\n    openWindow: openWindow,\n    signout: signout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }) : __jsx(Window, {\n    setUsername: setUsername,\n    category: \"username\",\n    maxZIndex: maxZIndex,\n    setLastPosition: setLastPosition,\n    lastPosition: lastPosition,\n    setMaxZIndex: setMaxZIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Main, \"jDQsT52iqxwDmz2U6GuPSbfkvbM=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-talk/components/main-mobile.tsx"],"names":["React","useState","useEffect","Window","socketIOClient","socket","process","env","socketPort","Main","props","maxZIndex","setMaxZIndex","windows","setWindows","x","y","lastPosition","setLastPosition","username","setUsername","localStorage","getItem","openWindow","_id","room","isOpened","findIndex","window","newWindow","roomname","positionX","positionY","zIndex","owner","participants","length","emit","newWindows","map","signout","removeItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Window from '../components/window';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(`:${process.env.socketPort}/`);\n\nexport default function Main(props: any) {\n  const [maxZIndex, setMaxZIndex] = useState(0);\n  const [windows, setWindows] = useState([] as any);\n  const [lastPosition, setLastPosition] = useState({ x: 200, y: 50 });\n  const [username, setUsername] = useState('' as any);\n\n  useEffect(() => {\n    if (localStorage.getItem('omega-talk-username')) {\n      setUsername(localStorage.getItem('omega-talk-username'));\n    }\n  }, []);\n  const openWindow = (_id: string, room: any) => {\n    const isOpened = windows.findIndex((window: any) => window._id === _id);\n    const newWindow = {\n      _id,\n      roomname: room.roomname,\n      positionX: lastPosition.x + 20,\n      positionY: lastPosition.y + 20,\n      zIndex: maxZIndex + 100,\n      owner: room.owner,\n      participants: room.participants.length,\n    };\n    if (isOpened === -1) {\n      setWindows((windows: any) => [...windows, newWindow] as any);\n      setLastPosition({ x: newWindow.positionX, y: newWindow.positionY });\n      if (socket) {\n        socket.emit('joinroom', {\n          _id,\n          username,\n        });\n      }\n    } else {\n      const newWindows = windows.map((window: any) => {\n        if (window._id === _id) {\n          window.zIndex = maxZIndex + 1;\n        }\n        return window;\n      });\n      setWindows(() => newWindows);\n    }\n  };\n\n  const signout = () => {\n    localStorage.removeItem('omega-talk-username');\n    setUsername('');\n  };\n\n  return (\n    <>\n      {username ? (\n        <Window\n          category=\"main\"\n          maxZIndex={maxZIndex}\n          username={username}\n          lastPosition={lastPosition}\n          setLastPosition={setLastPosition}\n          setMaxZIndex={setMaxZIndex}\n          openWindow={openWindow}\n          signout={signout}\n        />\n      ) : (\n        <Window\n          setUsername={setUsername}\n          category=\"username\"\n          maxZIndex={maxZIndex}\n          setLastPosition={setLastPosition}\n          lastPosition={lastPosition}\n          setMaxZIndex={setMaxZIndex}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}